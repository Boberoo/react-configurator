{"version":3,"sources":["Login.js","QuoteBuilder.js","RecipeDetail.js","logo.svg","App.js","reportWebVitals.js","index.js","Omni.js"],"names":["Login","props","handleChange","event","nam","target","name","val","value","credentials","state","setState","DoPriceChanged","index","newVal","isLoaded","error","quote","quote_lines","selling_price","submitForm","preventDefault","setUserNameAndLogonToken","username","password","onLogon","requestOptions","method","headers","body","JSON","stringify","fetch","this","baseUrl","userName","then","res","ok","text","data","statusmessage","prevProps","prevState","document","getElementById","innerHTML","onSubmit","className","htmlFor","type","placeholder","onChange","id","status","action","OmniReactComponent","QuoteBuilder","getVolume","width","length","height","getExtPrice","line","selling_price_per","quantity","getTotalExcl","reduce","a","b","handleQuoteMasterChange","handleInput","e","refreshTimeout","clearTimeout","setTimeout","total","submitQuote","saveQuote","renderQuoteDetails","map","stock_code","description","lineindex","OnPriceChanged","line_no","renderQuoteMaster","build_type","formatQty","formatPrice","url","reference","encodeURIComponent","companyName","console","log","Headers","append","Buffer","from","toString","auth","mode","redirect","json","result","restMethod","loadQuote","getUserName","onClick","DoLogonChanged","ROUNDUP","num","precision","Math","round","ROUNDDOWN","trunc","IIF","condition","trueresult","falseresult","RecipeDetail","getWeight","recipe_lines","ext_weight","calcExtPrice","handleRecipeMasterChange","handleInputChange","checked","calcId","parent_stock_code","sequence_number","calcQty","formula","recipe_memo","has_recipe","toUpperCase","replace","qty","eval","err","message","calcUnitPrice","price","stock_unit_selling_price_3","abs","stock_discount_2","stock_discount_1","stock_discount_5","renderRecipeDetail","align","stock_description","renderRecipeDetails","expanded","checkbox","renderRecipe","includes","stock_parent_code","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","configurator_recipe_detail","loadRecipe","stockCode","getDefaultVal","defaultval","URLSearchParams","window","location","search","get","process","App","refno","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","sessionStorage","UserName","logonToken","Token","restGet","endpoint","React","Component"],"mappings":"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","file":"static/js/main.53037fa9.chunk.js","sourcesContent":["//import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport OmniReactComponent from './Omni.js';\r\n\r\n\r\n\r\n\r\nclass Login extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\tthis.state = {...this.state, \r\n      credentials: null\r\n    };\r\n\t\r\n  }\r\n  \r\n static getDerivedStateFromProps(props, state) {\r\n    return {userName: props.userName };\r\n  } \r\n  \r\n  \r\n  \r\n  getLogonToken(credentials) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: '{ \"quote\" :  '+JSON.stringify(credentials)+'  }'\r\n    };\r\n    fetch(this.state.baseUrl+\"/Logon/\"+this.props.userName+\"?\"+this.state.credentials, requestOptions)\r\n        .then((res) => {\r\n\t\t  if (!res.ok) { \r\n\t\t    return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    return res.text();\r\n\t\t  }\r\n\t\t  })\r\n        .then(data => this.setState({ statusmessage: data }),\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t\r\n          this.setState({\r\n            //isLoaded: true,\r\n            statusmessage: \"Error: \"+error\r\n          });\r\n        });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    /*setTimeout(() => {\r\n      \r\n\t  this.loadQuote()\r\n    }, 100)*/\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n \r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML =\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor;\r\n\t\"Updating..\";\r\n\treturn null; //??\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor;\r\n\t//\"Ready\";\r\n  }\r\n  \r\n  handleChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\tconst credentials = { ...this.state.credentials, [nam]: val }\r\n    this.setState(() => ({ credentials }))\r\n    //this.setState({...this.state.quote, [nam]: val});\r\n\t\r\n  }\r\n  \r\n  DoPriceChanged = (index, newVal) => {\r\n    //console.log(\"ssssssssssssasasas\")\r\n    const { error, isLoaded, quote } = this.state;\r\n    //console.log(isLoaded);\r\n    if (isLoaded && quote) {\r\n      //quote.quote_lines[index].selling_price = newVal;\r\n      //console.log(quote);\r\n      //this.setState(() => ({ quote }));\r\n      this.state.quote.quote_lines[index].selling_price = newVal;\r\n    }\r\n  }\r\n  \r\n   submitForm = (event) => {\r\n    event.preventDefault();\r\n    //###do some basic validation?\r\n    //alert(\"You are submitting \" + this.state.reference);\r\n    //this.getLogonToken(this.state.credentials);\r\n    //alert(this.state.statusmessage);\r\n    this.setUserNameAndLogonToken(this.state.credentials.username, this.state.credentials.password);\r\n    this.props.onLogon();\r\n  }\r\n  \r\n  \r\n  \r\n  render() {\r\n    //const carname = \"Ford\";\r\n    //console.log(this.props);\r\n    \r\n    //const [username, setUsername] = useState(\"\");\r\n    //const [password, setPassword] = useState(\"\");\r\n  \r\n    return (\r\n      <form onSubmit={this.submitForm}>\r\n      <h1>Please enter your Omni logon details</h1>\r\n      <div className=\"form-group\">\r\n      <label htmlFor=\"username\">User Name: \r\n      <input\r\n        type=\"text\"\r\n        name=\"userName\"\r\n        placeholder=\"User Name\"\r\n        className=\"form-control\"\r\n        onChange={this.handleChange}\r\n      /></label></div>\r\n      <div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\">Password: \r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"form-control\"\r\n          onChange={this.handleChange}\r\n        /></label></div>\r\n      </div>\r\n    <p id=\"status\">{this.state.status}</p>\r\n\t  \r\n\t  <button type=\"submit\" action=\"login\">Login</button>\r\n      </form>\r\n    );\r\n    \r\n    \r\n  }\r\n}\r\n\r\nexport default Login;","//import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport RecipeDetail from './RecipeDetail.js';\r\nimport Login from './Login.js';\r\nimport OmniReactComponent from './Omni.js';\r\n\r\n\r\n\r\n\r\nclass QuoteBuilder extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshTimeout = null;\r\n  \tthis.state = {...this.state, \r\n      quote: null, action: \"save\", total: 0.0\r\n    };\r\n\t\r\n  }\r\n  \r\n static getDerivedStateFromProps(props, state) {\r\n    return {reference: props.reference };\r\n  } \r\n  \r\n  loadQuote() {\r\n    const url = this.state.baseUrl+\"/Quote/\"+this.props.reference+\"?CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    \r\n    console.log(url);\r\n    \r\n    //let base64 = require('base-64');\r\n    let headers = new Headers();\r\n\r\n    headers.append('Accept', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    //headers.append('Authorization', 'Basic ' + base64.encode(this.state.userName + \":\" + this.state.password));\r\n    //headers.set('Authorization', 'Basic ' + Buffer.from(this.state.userName + \":\" + this.state.password).toString('base64'));\r\n    headers.append('Authorization', 'Basic ' + Buffer.from(this.state.userName + \":\" + this.state.password).toString('base64'));\r\n    const auth = 'Basic ' + Buffer.from(this.state.userName + ':' + this.state.password).toString('base64');\r\n    \r\n\t  \r\n\t  fetch(url, {method:'GET',\r\n        //mode: 'no-cors',\r\n        mode: 'cors',\r\n        redirect: 'follow',\r\n        credentials: 'include', //without this, authorizaion header won't get passed through to cross origin call\r\n        //headers: headers\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': auth\r\n        }\r\n       })\r\n      .then((res) => {\r\n\t\t  if (!res.ok) { \r\n        \r\n\t\t    return res.text().then(text => {console.log(text); throw text;});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    return res.json();\r\n\t\t  }\r\n\t\t  })\r\n      .then(\r\n        (result) => {\r\n          //console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            quote: result.quote\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t    console.log(JSON.stringify(error));\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )  \r\n    //this.setState({quote: {acc_no: \"1234\", build_type: \"Trailer\", height: 4, width: 3, length: 9.5}});\r\n\t\r\n  }\r\n  \r\n  saveQuote(quote, action) {\r\n    \r\n    let headers = new Headers();\r\n\r\n    headers.append('Accept', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    //headers.append('Authorization', 'Basic ' + base64.encode(this.state.userName + \":\" + this.state.password));\r\n    //headers.set('Authorization', 'Basic ' + Buffer.from(this.state.userName + \":\" + this.state.password).toString('base64'));\r\n    headers.append('Authorization', 'Basic ' + Buffer.from(this.state.userName + \":\" + this.state.password).toString('base64'));\r\n    const auth = 'Basic ' + Buffer.from(this.state.userName + ':' + this.state.password).toString('base64');\r\n    \r\n    let restMethod = 'POST';\r\n    \r\n    let url = this.state.baseUrl+\"/Quote/\";\r\n    if (action == \"saveasrev\") {\r\n      url += this.props.reference+\"-1\";\r\n    }\r\n    else if (action == \"saveas\") {\r\n      //new quote, don't specify a reference  \r\n      //clear quote.source_type..?\r\n    }\r\n    else { //(action == \"save\")\r\n      url += this.props.reference;\r\n      restMethod = 'PUT';\r\n    }\r\n    \r\n    url += \"?CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    \r\n    const requestOptions = {\r\n        method: restMethod,\r\n        mode: 'cors',\r\n        redirect: 'follow',\r\n        credentials: 'include', //without this, authorizaion header won't get passed through to cross origin call\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': auth\r\n        },\r\n        body: '{ \"quote\" :  '+JSON.stringify(quote)+'  }'\r\n    };\r\n    \r\n    //fetch(this.state.baseUrl+\"/Quote/\"+this.props.reference+\"?\"+this.state.credentials, requestOptions)\r\n    fetch(url, requestOptions)\r\n        .then((res) => {\r\n\t\t  if (!res.ok) { \r\n\t\t    return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    return res.text();\r\n\t\t  }\r\n\t\t  })\r\n        .then(data => this.setState({ statusmessage: data }),\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t\r\n          this.setState({\r\n            //isLoaded: true,\r\n            statusmessage: \"Error: \"+error\r\n          });\r\n        });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      \r\n\t  this.loadQuote()\r\n    }, 100)\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n  getVolume = () => {\r\n\t let quote = this.state.quote;\r\n     if (!quote) return 0;\t \r\n\t return quote.width * quote.length * quote.height;\r\n  }\r\n  \r\n  getExtPrice = (line) => {\r\n   if (line.selling_price_per) \r\n     return line.quantity * line.selling_price / line.selling_price_per\r\n   else\r\n\t   return line.quantity * line.selling_price;\r\n  }\r\n  \r\n  getTotalExcl = () => {\r\n\t let quote = this.state.quote;\r\n     if (!quote) return 0;\t \r\n\t return quote.quote_lines.reduce((a, b) => a+this.getExtPrice(b), 0); \r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML =\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor;\r\n\t\"Updating..\";\r\n\treturn null; //??\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor;\r\n\t//\"Ready\";\r\n  }\r\n  \r\n  handleQuoteMasterChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\tconst quote = { ...this.state.quote, [nam]: val }\r\n    this.setState(() => ({ quote }))\r\n    //this.setState({...this.state.quote, [nam]: val});\r\n\t\r\n  }\r\n  \r\n  handleInput = e => {\r\n    this.setState({[e.target.name]: e.target.value});     \r\n  }\r\n  \r\n  DoPriceChanged = (index, newVal) => {\r\n    const { error, isLoaded, quote } = this.state;\r\n    if (isLoaded && quote) {\r\n      if (this.refreshTimeout)\r\n         clearTimeout(this.refreshTimeout);\r\n      //quote.quote_lines[index].selling_price = newVal;\r\n      //console.log(quote);\r\n      //this.setState(() => ({ quote }));\r\n      this.state.quote.quote_lines[index].selling_price = newVal;\r\n      this.refreshTimeout = setTimeout(() =>{ this.setState({ total:  this.getTotalExcl() }); }, 50);\r\n      \r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n   submitQuote = (event) => {\r\n    event.preventDefault();\r\n    //###do some basic validation?\r\n    //alert(\"You are submitting \" + this.state.reference);\r\n    //alert(event.target.action);\r\n    //alert(this.state.action);\r\n    this.saveQuote(this.state.quote, this.state.action);\r\n    //alert(this.state.statusmessage);\r\n    \r\n  }\r\n  \r\n  renderQuoteDetails = (quote) => {\r\n\t  return (<ul>{quote.quote_lines.map((line, index) =>\r\n\t  <li key={line.line_no}>{line.quantity}x {line.stock_code} {line.description} <RecipeDetail {...quote} {...line} lineindex={index} OnPriceChanged={this.DoPriceChanged} credentials={this.props.credentials}/></li>)}</ul>); \r\n\t  \r\n\t  //NB. the ... makes it pass the object properties individually\r\n  }\r\n  \r\n  renderQuoteMaster = () => {\r\n\t//let quote = this.state.quote;  \r\n\tconst { error, isLoaded, quote } = this.state;\r\n    if (error) return <h2>Error: {error}</h2>;\r\n    if (!isLoaded) return <div>Loading...</div>;\r\n\tif (!quote) return (<h2>Loading..</h2>);  \r\n  \r\n\t//NB. uses label inside span to\tkeep the lebel and input together no matter what the screen width, but uses optimal space all the time\r\n    return (<div><span className=\"form-group\"><label>\r\n          Select the build type:\r\n          <select name=\"build_type\" className=\"form-control\" value={quote.build_type} onChange={this.handleQuoteMasterChange}>\r\n            <option value=\"Semi-Rigid\">Semi-Rigid</option>\r\n            <option value=\"Trailer\">Trailer</option>\r\n            <option value=\"Repair\">Repair</option>\r\n            <option value=\"Parts\">Parts</option>\r\n          </select>\r\n        </label></span>\r\n    \r\n\t\t<span className=\"form-group\"><label> Length:\r\n      <input\r\n        type='number'\r\n        name='length'\r\n        className=\"form-control\"\r\n\t\t    value={quote.length}\r\n        onChange={this.handleQuoteMasterChange}\r\n      /></label></span>\r\n      <span className=\"form-group\"><label> Width:\r\n      <input\r\n        type='number'\r\n        name='width'\r\n        className=\"form-control\"\r\n\t\t    value={quote.width}\r\n        onChange={this.handleQuoteMasterChange}\r\n      /></label></span>\r\n\t  <span className=\"form-group\"><label> Height:\r\n      <input\r\n        type='number'\r\n        name='height'\r\n        className=\"form-control\"\r\n\t\t    value={quote.height}\r\n        onChange={this.handleQuoteMasterChange}\r\n      /></label></span>\r\n\t  <p>Volume: {this.formatQty(this.getVolume())+\" cubic metres\"}</p>\r\n\t  \r\n\t  {this.renderQuoteDetails(quote)}\r\n\t  <p className=\"grand-total\">Total: {this.formatPrice(this.getTotalExcl())}</p>\r\n    <p id=\"statusmessage\">{this.state.statusmessage}</p>\r\n\t  </div>);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    //const carname = \"Ford\";\r\n    //console.log(this.props);\r\n    if (!this.getUserName()) {\r\n      return (\r\n    <Login onLogon={this.DoLogonChanged}/>);\r\n    }\r\n    \r\n    return (\r\n      <form onSubmit={this.submitQuote}>\r\n      <h1>Enter the type and dimensions</h1>\r\n      \r\n     <p id=\"status\">{this.state.status}</p>\r\n\t   {this.renderQuoteMaster()}\r\n\t   <button type=\"submit\" name=\"action\" value=\"save\" onClick={this.handleInput}>Save Quote</button> <button type=\"submit\" name=\"action\" value=\"saveas\" onClick={this.handleInput}>Save As New Quote</button> <button type=\"submit\" name=\"action\" value=\"saveasrev\" onClick={this.handleInput}>Save As Revised Quote</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuoteBuilder;","//import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport OmniReactComponent from './Omni.js';\r\n\r\n\r\nfunction ROUNDUP(num, precision) {\r\n  \r\n  if (!precision) //make an optional param\r\n    precision = 0;\r\n    \r\n  //console.log(precision);\r\n  //console.log(10**precision);\r\n  \r\n  return Math.round((num+(0.499/10**precision)) * 10**precision) / 10**precision;\r\n}\r\n\r\n//not sure if needed, but Omni Trucks test data contains these, and I see it is a valid Excel function too:\r\n//To round down to the nearest specified place, use the ROUNDDOWN function. >> useful for when qty is negative\r\nfunction ROUNDDOWN(num, precision) {\r\n  \r\n  if (!precision) //make an optional param\r\n    precision = 0;\r\n  \r\n  return Math.trunc(num * 10**precision) / 10**precision;\r\n}\r\n\r\nfunction IIF(condition, trueresult, falseresult) {\r\n  if (condition)\r\n    return trueresult\r\n  else\r\n    return falseresult;\r\n}\r\n\r\nclass RecipeDetail extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {...this.state, \r\n      recipe_lines: null,\r\n\t    expanded: false\r\n    };\r\n    \r\n  }\r\n  \r\n static getDerivedStateFromProps(props, state) {\r\n    return {stockCode: props.stock_code };\r\n  } \r\n  \r\n  loadRecipe() {\r\n\t  //console.log(this.props.stock_code);\r\n    //const url = this.state.baseUrl+\"/Stock Recipe/\"+this.props.stock_code+\"?CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    //const url = this.state.baseUrl+\"/Report/Recipe Export - Individual?IFGCode=\"+encodeURIComponent(this.props.stock_code)+\"&CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    const url = this.state.baseUrl+\"/Report/Configurator Recipe Detail?IFGCode=\"+encodeURIComponent(this.props.stock_code)+\"&CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    \r\n    console.log(url);\r\n    \r\n    let headers = new Headers();\r\n\r\n    headers.append('Accept', 'application/json');\r\n    headers.append('Content-Type', 'application/json');\r\n    //headers.append('Authorization', 'Basic ' + base64.encode(this.state.userName + \":\" + this.state.password));\r\n    //headers.set('Authorization', 'Basic ' + Buffer.from(this.state.userName + \":\" + this.state.password).toString('base64'));\r\n    headers.append('Authorization', 'Basic ' + Buffer.from(this.state.userName + \":\" + this.state.password).toString('base64'));\r\n    const auth = 'Basic ' + Buffer.from(this.state.userName + ':' + this.state.password).toString('base64');\r\n    \r\n\t  ///#######this report is a stock list, need a report or a proper endpoint, will use as POC for now though\r\n\t//fetch(\"http://st.omniaccounts.co.za:55683/Report/Recipe Export?Stock Code=\"+this.props.stock_code+\"&\"+this.props.credentials)\r\n  //fetch(\"http://st.omniaccounts.co.za:55683/Stock Recipe/\"+this.props.stock_code+\"?\"+this.props.credentials)\r\n  //fetch(this.state.baseUrl+\"/Stock Recipe/\"+this.props.stock_code+\"?\"+this.state.credentials)\r\n  fetch(url, {method:'GET',\r\n        //mode: 'no-cors',\r\n        mode: 'cors',\r\n        redirect: 'follow',\r\n        credentials: 'include', //without this, authorizaion header won't get passed through to cross origin call\r\n        //headers: headers\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': auth\r\n        }\r\n       })\r\n      .then((res) => {\r\n\t\t  if (!res.ok) { \r\n\t\t    return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    //res.text().then(text => {console.log(text)});\r\n\t\t    return res.json();\r\n\t\t  }\r\n\t\t  })\r\n      .then(\r\n        (result) => {\r\n\t\t\t\r\n\t\t      console.log(JSON.stringify(result));\r\n\t\t  \r\n          this.setState({\r\n            isLoaded: true,\r\n            //recipe: result.stock_recipe\r\n            //recipe_lines: result.recipe_export___individual\r\n            recipe_lines: result.configurator_recipe_detail\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )  \r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      \r\n\t  this.loadRecipe()\r\n    }, 100)\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n  getWeight = () => {\r\n\t let recipe_lines = this.state.recipe_lines;\r\n     if (!recipe_lines) return 0;\t \r\n\t return recipe_lines.reduce((a, b) => a+b.ext_weight, 0); \r\n  }\r\n  \r\n  getTotalExcl = () => {\r\n\t let recipe_lines = this.state.recipe_lines;\r\n     if (!recipe_lines) return 0;\t \r\n\t return recipe_lines.reduce((a, b) => a+this.calcExtPrice(b), 0); \r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML =\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor;\r\n\t\"Updating..\";\r\n\treturn null; //??\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor;\r\n\t//\"Ready\";\r\n  }\r\n  \r\n  handleRecipeMasterChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\tconst recipe_lines = { ...this.state.recipe_lines, [nam]: val }\r\n    this.setState(() => ({ recipe_lines }))\r\n    //this.setState({...this.state.quote, [nam]: val});\r\n\t\r\n  }\r\n  \r\n  \r\n  handleInputChange = (event) => {\r\n    let nam = event.target.name;\r\n    const val = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\r\n\tthis.setState({[nam]: val});\r\n\t\r\n  }\r\n  \r\n   calcId = (line) => {\r\n     return line.parent_stock_code +'_'+ line.sequence_number.toString();\r\n   }\r\n   \r\n   calcQty = (line) => {\r\n     //let formula = line.memo;\r\n     let formula = line.recipe_memo;\r\n     \r\n     if (line.has_recipe == \"Y\") return 0; //skip main recipe and intermediate recipe, only add up the parts\r\n     \r\n     //eg formula = \"ROUNDUP(HM*5,1)\";\r\n     \r\n     if (!formula || formula === \"\")\r\n       //return line.quantity_required;\r\n       return line.quantity;\r\n     \r\n     formula = formula.toUpperCase();\r\n     \r\n     //####CUSTOM RULES#### - sort of\r\n     \r\n     formula = formula.replace(/LM/g, this.props.length*1.0); //the *1.0 is in case you type in 02 in the input box, javascript calc then gives errors about quartets\r\n     formula = formula.replace(/WM/g, this.props.width*1.0);\r\n     formula = formula.replace(/HM/g, this.props.height*1.0);\r\n     formula = formula.replace(/\\bL\\b/g, this.props.length*1000);\r\n     formula = formula.replace(/\\bW\\b/g, this.props.width*1000); //the /b makes sure it's not the W in ROUNDDOWN() for example\r\n     formula = formula.replace(/\\bH\\b/g, this.props.height*1000);\r\n      \r\n     \r\n     //console.log(ROUNDUP(8500/1220)); //should be 7 add to unit tests?\r\n     //console.log((8500/1220));\r\n     //console.log(eval('ROUNDUP(8500/1220),0')); NB eval evaluates this to 0, no error - the comma in this formula should have been inside the brackets\r\n     \r\n     try {\r\n       let qty = line.quantity * ROUNDUP(eval(formula), 3); //always make max 3 decimal places\r\n       //console.log(formula+\" = \"+qty);\r\n       return qty;\r\n     }\r\n     catch(err) {\r\n       const message = \"Error on formula \"+formula+\": \"+err.message;\r\n       console.log(message);\r\n       document.getElementById(\"status\").innerHTML = message\r\n       \r\n     }     \r\n     \r\n   }\r\n   \r\n   calcUnitPrice = (line) => {\r\n     //####CUSTOM RULES####\r\n     \r\n     let price = line.stock_unit_selling_price_3; //this is usually the min selling price / landed cost / break even price in most systems\r\n     \r\n     if (this.props.build_type === \"Trailer\")\r\n       price *= (1+Math.abs(line.stock_discount_2)/100)   //use abs(), as theoretially these should be captured as negative discounts, but they may have captured them as positives\r\n     else if (this.props.build_type === \"Semi-Rigid\")\r\n       price *= (1+Math.abs(line.stock_discount_1)/100);\r\n     else if (this.props.build_type === \"Parts\")\r\n       price *= (1+Math.abs(line.stock_discount_5)/100);\r\n     \r\n     price = ROUNDUP(price, 1); //must be rounded to at least 2, customer want the price prettier though so making nearest 10c - maybe use MROUND to 0.05?\r\n\r\n     return price;\r\n     \r\n   }\r\n   \r\n   calcExtPrice = (line) => {\r\n     return Math.round(this.calcUnitPrice(line) * this.calcQty(line), 2);\r\n   }\r\n   \r\n   renderRecipeDetail = (line) => {\r\n\t  \r\n    //let subRecipe; just use a report that expands all detail, and includes the necessary stock info too, ie SP3 and discount 1..5\r\n    //if (line.manufacture_sub_recipe)\r\n    //  subRecipe = <RecipeDetail {...this.props} {...line} />;\r\n    \r\n    if (line.has_recipe == \"Y\") return null;\r\n\t  if (line.has_recipe == \"N\" && !line.parent_stock_code) return null; //want not a recipe item at all, but one line gets returned\r\n    \r\n   //return (<li key={line.seq_no}>{this.calcQty(line)}x {line.stock_code} {line.stock_description} {this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})} {subRecipe} </li>);\r\n   //return (<li key={line.seq_no}>{this.calcQty(line)}x {line.stock_code} {line.stock_description} {this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})} </li>);\r\n   //return (<tr key={line.seq_no}><td align=\"Right\">{this.calcQty(line)}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td>{line.recipe_memo}</td><td align=\"Right\">{this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})}</td></tr>);\r\n   //return (<tr key={line.sequence_number}><td align=\"Right\">{this.calcQty(line)}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td>{line.recipe_memo}</td><td align=\"Right\">{this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})}</td></tr>);\r\n   //return (<tr key={this.calcId(line)}><td align=\"Right\">{this.calcQty(line)}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td>{line.recipe_memo}</td><td align=\"Right\">{this.calcExtPrice(line).toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2})}</td></tr>);\r\n   return (<tr key={this.calcId(line)}><td align=\"Right\">{this.formatQty(this.calcQty(line))}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td>{line.recipe_memo}</td><td align=\"Right\">{this.formatPrice(this.calcExtPrice(line))}</td></tr>);\r\n   \r\n  }\r\n   \r\n  renderRecipeDetails = (recipe_lines) => {\r\n\t  const expanded = this.state.expanded;\r\n\t  const checkbox = <label>\r\n          Expand:\r\n          <input\r\n            name=\"expanded\"\r\n            type=\"checkbox\"\r\n            checked={this.state.expanded}\r\n            onChange={this.handleInputChange} />\r\n        </label>;\r\n        \r\n\t  if (!expanded)\r\n\t    return checkbox;\t  \r\n\t  else\r\n\t    return (<span>{checkbox}<table className=\"table-center recipe-detail\"><tbody>{recipe_lines.map((line) =>\r\n      this.renderRecipeDetail(line))}</tbody></table></span>);\r\n  }\r\n  \r\n  renderRecipe = () => {\r\n\t//let quote = this.state.quote;  \r\n\tconst { error, isLoaded, recipe_lines } = this.state;\r\n  if (error) \r\n    if (error.includes(\"does not have a recipe\"))\r\n      return <sup>{error}</sup>;\r\n    else\r\n      return <h2>Error: {error}</h2>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\tif (!recipe_lines) return (<h2>Loading..</h2>); \r\n\r\n  if (recipe_lines.length == 0)\r\n    return <sup>No recipe</sup>;  \r\n  \r\n  if (recipe_lines.length == 1 && recipe_lines.stock_parent_code == null)\r\n    return <sup>No recipe.</sup>;  \r\n  \r\n  const total = this.getTotalExcl();\r\n  \r\n\tif (this.props.OnPriceChanged) {\r\n    this.props.OnPriceChanged(this.props.lineindex, total);\r\n  } \r\n    \r\n   return (<span><b>Total: {total.toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2})}</b>&nbsp;\r\n\t{this.renderRecipeDetails(recipe_lines)}\r\n\t\t\r\n\t\r\n   \r\n\t  </span>);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    \r\n    return (\r\n\t<div>\r\n\t<p id=\"status\"></p>\r\n      \r\n      \r\n\t  {this.renderRecipe()}\r\n\t  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeDetail;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport QuoteBuilder from './QuoteBuilder.js';\nimport Login from './Login.js';\n\n\nfunction getDefaultVal(name, defaultval) {\n  let val = (new URLSearchParams(window.location.search)).get(name); //NB. is case sensitive!\n  if (!val || val === \"\") {\n      val = process.env.[\"REACT_APP_\"+name]; //NB. for react, env variables MUST be prefixed with REACT_APP_\n    }\n  if (!val || val === \"\")\n    val = defaultval;\n  return val;\n}\n\nfunction App() {\n    \n  const credentials = \"UserName=\"+getDefaultVal(\"UserName\", \"Guest\")+\"&Password=\"+getDefaultVal(\"Password\", \"Dev2021\")+\"&CompanyName=\"+getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\");\n  \n  let refno = getDefaultVal(\"RefNo\", \"Q00008\"); //NB. is case sensitive!\n  \n  /*if (!sessionStorage.UserName) {\n      return (\n      <Login />);\n    }*/\n  \n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"App-name\">\n        <h1>Configurator</h1>\n        <sup>Quote Builder</sup>\n        </div>\n      </header>\n\t  <QuoteBuilder reference={refno} credentials={credentials}/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import dotenv from 'dotenv';\r\n\r\nclass OmniReactComponent extends React.Component {\r\n  \r\n  \r\n  \r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    //dotenv.config();\r\n    const baseUrl = this.getDefaultVal(\"BaseUrl\", \"https://st.omniaccounts.co.za:55685\");\r\n    \r\n    //console.log(baseUrl);\r\n    const credentials = \"UserName=\"+this.getDefaultVal(\"UserName\", \"Guest\")+\"&Password=\"+this.getDefaultVal(\"Password\", \"Dev2021\")+\"&CompanyName=\"+this.getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\");\r\n    //console.log(credentials);\r\n    \r\n\tthis.state = {\r\n      //quote: null,\r\n      baseUrl,\r\n      credentials,\r\n      userName: this.getDefaultVal(\"UserName\", \"Guest\"),\r\n      password: this.getDefaultVal(\"Password\", \"Dev2021\"),\r\n      companyName: this.getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\"),\r\n      isLoaded: false\r\n    };\r\n\t\r\n  }\r\n  \r\n  getDefaultVal = (name, defaultval) => {\r\n    let val = (new URLSearchParams(window.location.search)).get(name); //NB. is case sensitive!\r\n    if (!val || val === \"\") {\r\n      val = process.env.[\"REACT_APP_\"+name]; //NB. for react, env variables MUST be prefixed with REACT_APP_\r\n    }\r\n    if (!val || val === \"\")\r\n      val = defaultval;\r\n    return val;\r\n  }\r\n  \r\n  getUserName = () => {\r\n    return sessionStorage.UserName;\r\n  }\r\n  \r\n   formatQty = (qty) => {\r\n     return qty.toLocaleString(undefined, {maximumFractionDigits:3});\r\n   }\r\n   \r\n   formatPrice = (price) => {\r\n     return price.toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2});\r\n   }\r\n  \r\n  setUserNameAndLogonToken = (userName, logonToken) => {\r\n    sessionStorage.UserName = userName;\r\n    sessionStorage.Token = logonToken;\r\n    \r\n    this.setState({\r\n            userName: userName,\r\n            password: logonToken\r\n          });\r\n  }\r\n  \r\n  DoLogonChanged = () => {\r\n    this.setState({\r\n            userName: sessionStorage.UserName,\r\n            password: sessionStorage.Token\r\n          });\r\n  }\r\n  \r\n  \r\n  restGet = (endpoint, id) => {\r\n    //##willneed a callback for what do do witht the success response\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default OmniReactComponent;"],"sourceRoot":""}