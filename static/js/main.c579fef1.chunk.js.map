{"version":3,"sources":["Login.js","QuoteBuilder.js","RecipeDetail.js","logo.svg","App.js","reportWebVitals.js","index.js","Omni.js"],"names":["Login","props","handleChange","event","nam","target","name","val","value","credentials","state","setState","DoPriceChanged","index","newVal","isLoaded","error","quote","quote_lines","selling_price","submitForm","preventDefault","setUserNameAndLogonToken","username","password","onLogon","requestOptions","method","headers","body","JSON","stringify","fetch","this","baseUrl","userName","then","res","ok","text","data","statusmessage","prevProps","prevState","document","getElementById","innerHTML","onSubmit","className","htmlFor","type","placeholder","onChange","id","status","action","OmniReactComponent","QuoteBuilder","getVolume","width","length","height","getExtPrice","line","selling_price_per","quantity","getTotalExcl","reduce","a","b","handleQuoteMasterChange","submitQuote","saveQuote","renderQuoteDetails","map","stock_code","description","lineindex","OnPriceChanged","line_no","renderQuoteMaster","build_type","toLocaleString","undefined","maximumFractionDigits","url","reference","companyName","console","log","Headers","set","Buffer","from","toString","mode","json","result","setTimeout","loadQuote","getUserName","DoLogonChanged","ROUNDUP","num","precision","Math","round","RecipeDetail","getWeight","recipe","recipe_lines","ext_weight","calcExtPrice","handleRecipeMasterChange","handleInputChange","checked","calcQty","formula","memo","quantity_required","replace","qty","eval","err","message","calcUnitPrice","price","renderRecipeDetail","align","stock_description","seq_no","renderRecipeDetails","expanded","checkbox","renderRecipe","includes","total","stock_recipe","loadRecipe","stockCode","getDefaultVal","defaultval","URLSearchParams","window","location","search","get","process","App","refno","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","sessionStorage","UserName","logonToken","Token","restGet","endpoint","React","Component"],"mappings":"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","file":"static/js/main.c579fef1.chunk.js","sourcesContent":["//import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport OmniReactComponent from './Omni.js';\r\n\r\n\r\n\r\n\r\nclass Login extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\tthis.state = {...this.state, \r\n      credentials: null\r\n    };\r\n\t\r\n  }\r\n  \r\n static getDerivedStateFromProps(props, state) {\r\n    return {userName: props.userName };\r\n  } \r\n  \r\n  \r\n  \r\n  getLogonToken(credentials) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: '{ \"quote\" :  '+JSON.stringify(credentials)+'  }'\r\n    };\r\n    fetch(this.state.baseUrl+\"/Logon/\"+this.props.userName+\"?\"+this.state.credentials, requestOptions)\r\n        .then((res) => {\r\n\t\t  if (!res.ok) { \r\n\t\t    return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    return res.text();\r\n\t\t  }\r\n\t\t  })\r\n        .then(data => this.setState({ statusmessage: data }),\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t\r\n          this.setState({\r\n            //isLoaded: true,\r\n            statusmessage: \"Error: \"+error\r\n          });\r\n        });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    /*setTimeout(() => {\r\n      \r\n\t  this.loadQuote()\r\n    }, 100)*/\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n \r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML =\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor;\r\n\t\"Updating..\";\r\n\treturn null; //??\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor;\r\n\t//\"Ready\";\r\n  }\r\n  \r\n  handleChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\tconst credentials = { ...this.state.credentials, [nam]: val }\r\n    this.setState(() => ({ credentials }))\r\n    //this.setState({...this.state.quote, [nam]: val});\r\n\t\r\n  }\r\n  \r\n  DoPriceChanged = (index, newVal) => {\r\n    //console.log(\"ssssssssssssasasas\")\r\n    const { error, isLoaded, quote } = this.state;\r\n    //console.log(isLoaded);\r\n    if (isLoaded && quote) {\r\n      //quote.quote_lines[index].selling_price = newVal;\r\n      //console.log(quote);\r\n      //this.setState(() => ({ quote }));\r\n      this.state.quote.quote_lines[index].selling_price = newVal;\r\n    }\r\n  }\r\n  \r\n   submitForm = (event) => {\r\n    event.preventDefault();\r\n    //###do some basic validation?\r\n    //alert(\"You are submitting \" + this.state.reference);\r\n    //this.getLogonToken(this.state.credentials);\r\n    //alert(this.state.statusmessage);\r\n    this.setUserNameAndLogonToken(this.state.credentials.username, this.state.credentials.password);\r\n    this.props.onLogon();\r\n  }\r\n  \r\n  \r\n  \r\n  render() {\r\n    //const carname = \"Ford\";\r\n    //console.log(this.props);\r\n    \r\n    //const [username, setUsername] = useState(\"\");\r\n    //const [password, setPassword] = useState(\"\");\r\n  \r\n    return (\r\n      <form onSubmit={this.submitForm}>\r\n      <h1>Please enter your Omni logon details</h1>\r\n      <div className=\"form-group\">\r\n      <label htmlFor=\"username\">User Name: \r\n      <input\r\n        type=\"text\"\r\n        name=\"userName\"\r\n        placeholder=\"User Name\"\r\n        onChange={this.handleChange}\r\n      /></label></div>\r\n      <div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\">Password: \r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={this.handleChange}\r\n        /></label></div>\r\n      </div>\r\n    <p id=\"status\">{this.state.status}</p>\r\n\t  \r\n\t  <button type=\"submit\" action=\"login\">Login</button>\r\n      </form>\r\n    );\r\n    \r\n    \r\n  }\r\n}\r\n\r\nexport default Login;","//import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport RecipeDetail from './RecipeDetail.js';\r\nimport Login from './Login.js';\r\nimport OmniReactComponent from './Omni.js';\r\n\r\n\r\n\r\n\r\nclass QuoteBuilder extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\tthis.state = {...this.state, \r\n      quote: null\r\n    };\r\n\t\r\n  }\r\n  \r\n static getDerivedStateFromProps(props, state) {\r\n    return {reference: props.reference };\r\n  } \r\n  \r\n  loadQuote() {\r\n    const url = this.state.baseUrl+\"/Quote/\"+this.props.reference+\"?CompanyName=\"+this.state.companyName;\r\n    \r\n    console.log(url);\r\n    \r\n    //let base64 = require('base-64');\r\n    let headers = new Headers();\r\n\r\n   //headers.append('Content-Type', 'text/json');\r\n    //headers.append('Authorization', 'Basic ' + base64.encode(this.state.userName + \":\" + this.state.password));\r\n    headers.set('Authorization', 'Basic ' + Buffer.from(this.state.userName + \":\" + this.state.password).toString('base64'));\r\n\t  \r\n\t  fetch(url, {method:'GET',\r\n        mode: 'no-cors',\r\n        headers: headers\r\n       })\r\n      .then((res) => {\r\n\t\t  if (!res.ok) { \r\n        \r\n\t\t    return res.text().then(text => {console.log(text); throw text;});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    return res.json();\r\n\t\t  }\r\n\t\t  })\r\n      .then(\r\n        (result) => {\r\n          //console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            quote: result.quote\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t    console.log(error);\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )  \r\n    //this.setState({quote: {acc_no: \"1234\", build_type: \"Trailer\", height: 4, width: 3, length: 9.5}});\r\n\t\r\n  }\r\n  \r\n  saveQuote(quote) {\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: '{ \"quote\" :  '+JSON.stringify(quote)+'  }'\r\n    };\r\n    fetch(this.state.baseUrl+\"/Quote/\"+this.props.reference+\"?\"+this.state.credentials, requestOptions)\r\n        .then((res) => {\r\n\t\t  if (!res.ok) { \r\n\t\t    return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    return res.text();\r\n\t\t  }\r\n\t\t  })\r\n        .then(data => this.setState({ statusmessage: data }),\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t\r\n          this.setState({\r\n            //isLoaded: true,\r\n            statusmessage: \"Error: \"+error\r\n          });\r\n        });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      \r\n\t  this.loadQuote()\r\n    }, 100)\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n  getVolume = () => {\r\n\t let quote = this.state.quote;\r\n     if (!quote) return 0;\t \r\n\t return quote.width * quote.length * quote.height;\r\n  }\r\n  \r\n  getExtPrice = (line) => {\r\n\t  \r\n   if (line.selling_price_per) \r\n     return line.quantity * line.selling_price / line.selling_price_per\r\n   else\r\n\t   return line.quantity * line.selling_price;\r\n  }\r\n  \r\n  getTotalExcl = () => {\r\n\t let quote = this.state.quote;\r\n     if (!quote) return 0;\t \r\n\t return quote.quote_lines.reduce((a, b) => a+this.getExtPrice(b), 0); \r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML =\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor;\r\n\t\"Updating..\";\r\n\treturn null; //??\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor;\r\n\t//\"Ready\";\r\n  }\r\n  \r\n  handleQuoteMasterChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\tconst quote = { ...this.state.quote, [nam]: val }\r\n    this.setState(() => ({ quote }))\r\n    //this.setState({...this.state.quote, [nam]: val});\r\n\t\r\n  }\r\n  \r\n  DoPriceChanged = (index, newVal) => {\r\n    //console.log(\"ssssssssssssasasas\")\r\n    const { error, isLoaded, quote } = this.state;\r\n    //console.log(isLoaded);\r\n    if (isLoaded && quote) {\r\n      //quote.quote_lines[index].selling_price = newVal;\r\n      //console.log(quote);\r\n      //this.setState(() => ({ quote }));\r\n      this.state.quote.quote_lines[index].selling_price = newVal;\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n   submitQuote = (event) => {\r\n    event.preventDefault();\r\n    //###do some basic validation?\r\n    //alert(\"You are submitting \" + this.state.reference);\r\n    this.saveQuote(this.state.quote);\r\n    //alert(this.state.statusmessage);\r\n  }\r\n  \r\n  renderQuoteDetails = (quote) => {\r\n\t  return (<ul>{quote.quote_lines.map((line, index) =>\r\n\t  <li key={line.line_no}>{line.quantity}x {line.stock_code} {line.description} <RecipeDetail {...quote} {...line} lineindex={index} OnPriceChanged={this.DoPriceChanged} credentials={this.props.credentials}/></li>)}</ul>); \r\n\t  \r\n\t  //NB. the ... makes it pass the object properties individually\r\n  }\r\n  \r\n  renderQuoteMaster = () => {\r\n\t//let quote = this.state.quote;  \r\n\tconst { error, isLoaded, quote } = this.state;\r\n    if (error) return <h2>Error: {error}</h2>;\r\n    if (!isLoaded) return <div>Loading...</div>;\r\n\tif (!quote) return (<h2>Loading..</h2>);  \r\n\t\t\r\n    return (<div><span className=\"form-group\"><label>\r\n          Select the build type:\r\n          <select name=\"build_type\" value={quote.build_type} onChange={this.handleQuoteMasterChange}>\r\n            <option value=\"Semi-Rigid\">Semi-Rigid</option>\r\n            <option value=\"Trailer\">Trailer</option>\r\n            <option value=\"Repair\">Repair</option>\r\n            <option value=\"Parts\">Parts</option>\r\n          </select>\r\n        </label></span>\r\n\t\t<span className=\"form-group\"><label> Length:\r\n      <input\r\n        type='number'\r\n        name='length'\r\n\t\tvalue={quote.length}\r\n        onChange={this.handleQuoteMasterChange}\r\n      /></label></span>\r\n      <span className=\"form-group\"><label> Width:\r\n      <input\r\n        type='number'\r\n        name='width'\r\n\t\tvalue={quote.width}\r\n        onChange={this.handleQuoteMasterChange}\r\n      /></label></span>\r\n\t  <span className=\"form-group\"><label> Height:\r\n      <input\r\n        type='number'\r\n        name='height'\r\n\t\tvalue={quote.height}\r\n        onChange={this.handleQuoteMasterChange}\r\n      /></label></span>\r\n\t  <p>Volume: {this.getVolume()+\" cubic metres\"}</p>\r\n\t  \r\n\t  {this.renderQuoteDetails(quote)}\r\n\t  <p className=\"grand-total\">Total: {this.getTotalExcl().toLocaleString(undefined, {maximumFractionDigits:2})}</p>\r\n    <p id=\"statusmessage\">{this.state.statusmessage}</p>\r\n\t  </div>);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    //const carname = \"Ford\";\r\n    //console.log(this.props);\r\n    if (!this.getUserName()) {\r\n      return (\r\n    <Login onLogon={this.DoLogonChanged}/>);\r\n    }\r\n    \r\n    return (\r\n      <form onSubmit={this.submitQuote}>\r\n      <h1>Enter the type and dimensions</h1>\r\n      \r\n    <p id=\"status\">{this.state.status}</p>\r\n\t  {this.renderQuoteMaster()}\r\n\t  <button type=\"submit\" action=\"save\">Save Quote</button> <button type=\"submit\" action=\"saveas\">Save As New Quote</button> <button type=\"submit\" action=\"saveasrev\">Save As Revised Quote</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuoteBuilder;","//import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport OmniReactComponent from './Omni.js';\r\n\r\n\r\nfunction ROUNDUP(num, precision) {\r\n  \r\n  \r\n  if (!precision) //make an optional param\r\n    precision = 0;\r\n    \r\n  //console.log(precision);\r\n  //console.log(10**precision);\r\n  \r\n  return Math.round((num+(0.499/10**precision)) * 10**precision) / 10**precision;\r\n}\r\n\r\nclass RecipeDetail extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {...this.state, \r\n      recipe: null,\r\n\t    expanded: false\r\n    };\r\n    \r\n  }\r\n  \r\n static getDerivedStateFromProps(props, state) {\r\n    return {stockCode: props.stock_code };\r\n  } \r\n  \r\n  loadRecipe() {\r\n\t  //console.log(this.props.stock_code);\r\n\t  ///#######this report is a stock list, need a report or a proper endpoint, will use as POC for now though\r\n\t//fetch(\"http://st.omniaccounts.co.za:55683/Report/Recipe Export?Stock Code=\"+this.props.stock_code+\"&\"+this.props.credentials)\r\n  //fetch(\"http://st.omniaccounts.co.za:55683/Stock Recipe/\"+this.props.stock_code+\"?\"+this.props.credentials)\r\n  fetch(this.state.baseUrl+\"/Stock Recipe/\"+this.props.stock_code+\"?\"+this.state.credentials)\r\n      .then((res) => {\r\n\t\t  if (!res.ok) { \r\n\t\t    return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    //res.text().then(text => {console.log(text)});\r\n\t\t    return res.json();\r\n\t\t  }\r\n\t\t  })\r\n      .then(\r\n        (result) => {\r\n\t\t\t\r\n\t\t      console.log(JSON.stringify(result));\r\n\t\t  \r\n          this.setState({\r\n            isLoaded: true,\r\n            recipe: result.stock_recipe\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )  \r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      \r\n\t  this.loadRecipe()\r\n    }, 100)\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n  getWeight = () => {\r\n\t let recipe = this.state.recipe;\r\n     if (!recipe) return 0;\t \r\n\t return recipe.recipe_lines.reduce((a, b) => a+b.ext_weight, 0); \r\n  }\r\n  \r\n  getTotalExcl = () => {\r\n\t let recipe = this.state.recipe;\r\n     if (!recipe) return 0;\t \r\n\t return recipe.recipe_lines.reduce((a, b) => a+this.calcExtPrice(b), 0); \r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML =\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor;\r\n\t\"Updating..\";\r\n\treturn null; //??\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor;\r\n\t//\"Ready\";\r\n  }\r\n  \r\n  handleRecipeMasterChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\tconst recipe = { ...this.state.recipe, [nam]: val }\r\n    this.setState(() => ({ recipe }))\r\n    //this.setState({...this.state.quote, [nam]: val});\r\n\t\r\n  }\r\n  \r\n  \r\n  handleInputChange = (event) => {\r\n    let nam = event.target.name;\r\n    const val = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\r\n\tthis.setState({[nam]: val});\r\n\t\r\n  }\r\n   \r\n   calcQty = (line) => {\r\n     let formula = line.memo;\r\n     \r\n     //####TEST\r\n     //formula = \"HM*5\";\r\n     \r\n     if (!formula || formula === \"\")\r\n       return line.quantity_required;\r\n     \r\n     //####CUSTOM RULES#### - sort of\r\n     \r\n     formula = formula.replace(\"LM\", this.props.length);\r\n     formula = formula.replace(\"WM\", this.props.width);\r\n     formula = formula.replace(\"HM\", this.props.height);\r\n     formula = formula.replace(\"L\", this.props.length*1000);\r\n     formula = formula.replace(\"W\", this.props.width*1000);\r\n     formula = formula.replace(\"H\", this.props.height*1000);\r\n     \r\n     //console.log(ROUNDUP(8500/1220)); //should be 7 add to unit tests?\r\n     //console.log((8500/1220));\r\n     //console.log(eval('ROUNDUP(8500/1220),0')); NB eval evaluates this to 0, no error - the comma in this formula should have been inside the brackets\r\n     \r\n     try {\r\n       let qty = ROUNDUP(eval(formula), 3); //always make max 3 decimal places\r\n       console.log(formula+\" = \"+qty);\r\n       return qty;\r\n     }\r\n     catch(err) {\r\n       const message = \"Error on formula \"+formula+\": \"+err.message;\r\n       console.log(message);\r\n       document.getElementById(\"status\").innerHTML = message\r\n       \r\n     }     \r\n     \r\n   }\r\n   \r\n   calcUnitPrice = (line) => {\r\n     //####CUSTOM RULES####\r\n     //let formula = \"if (this.props.build_type) this.props.discount1\"; can let them put price formula somewhere too? Maybe have a memo on the Job Category..?\r\n         \r\n     //if (!formula || formula === \"\")\r\n     //  return line.quantity_required;\r\n     \r\n     //formula = formula.replace(\"D1\", this.props.length);\r\n     //formula = formula.replace(\"D2\", this.props.width);\r\n     //formula = formula.replace(\"SP3\", line.selling_price_3);\r\n     \r\n     /*console.log(formula);\r\n     \r\n     try {\r\n       let qty = eval(formula);\r\n       return qty;\r\n     }\r\n     catch(err) {\r\n       document.getElementById(\"error\").innerHTML = err.message;\r\n       \r\n     } */\r\n     \r\n     //let price = line.stock_selling_price_3;\r\n     let price = 100; //####need to look up from stock code - unless we make the recipe a report, and add those on as calc fields\r\n     \r\n     if (this.props.build_type === \"Trailer\")\r\n       price *= 1.3\r\n     else if (this.props.build_type === \"Semi-Rigid\")\r\n       price *= 1.5;\r\n     else if (this.props.build_type === \"Parts\")\r\n       price *= 5.5;\r\n     \r\n\r\n     return price;\r\n     \r\n   }\r\n   \r\n   calcExtPrice = (line) => {\r\n     return this.calcUnitPrice(line) * this.calcQty(line);\r\n   }\r\n   \r\n   renderRecipeDetail = (line) => {\r\n\t  \r\n    //let subRecipe; just use a report that expands all detail, and includes the necessary stock info too, ie SP3 and discount 1..5\r\n    //if (line.manufacture_sub_recipe)\r\n    //  subRecipe = <RecipeDetail {...this.props} {...line} />;\r\n    \r\n\t  \r\n   //return (<li key={line.seq_no}>{this.calcQty(line)}x {line.stock_code} {line.stock_description} {this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})} {subRecipe} </li>);\r\n   //return (<li key={line.seq_no}>{this.calcQty(line)}x {line.stock_code} {line.stock_description} {this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})} </li>);\r\n   return (<tr key={line.seq_no}><td align=\"Right\">{this.calcQty(line)}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td align=\"Right\">{this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})}</td></tr>);\r\n   \r\n  }\r\n   \r\n  renderRecipeDetails = (recipe) => {\r\n\t  const expanded = this.state.expanded;\r\n\t  const checkbox = <label>\r\n          Expand:\r\n          <input\r\n            name=\"expanded\"\r\n            type=\"checkbox\"\r\n            checked={this.state.expanded}\r\n            onChange={this.handleInputChange} />\r\n        </label>;\r\n        \r\n\t  if (!expanded)\r\n\t    return checkbox;\t  \r\n\t  else\r\n\t    return (<span>{checkbox}<table className=\"table-center recipe-detail\"><tbody>{recipe.recipe_lines.map((line) =>\r\n      this.renderRecipeDetail(line))}</tbody></table></span>);\r\n  }\r\n  \r\n  renderRecipe = () => {\r\n\t//let quote = this.state.quote;  \r\n\tconst { error, isLoaded, recipe } = this.state;\r\n  if (error) \r\n    if (error.includes(\"does not have a recipe\"))\r\n      return <sup>{error}</sup>;\r\n    else\r\n      return <h2>Error: {error}</h2>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\tif (!recipe) return (<h2>Loading..</h2>);  \r\n  \r\n  const total = this.getTotalExcl();\r\n  \r\n  if (this.props.OnPriceChanged) {\r\n    this.props.OnPriceChanged(this.props.lineindex, total);\r\n  }\r\n\t\t\r\n   return (<span><b>Total: {total.toLocaleString(undefined, {maximumFractionDigits:2})}</b>&nbsp;\r\n\t{this.renderRecipeDetails(recipe)}\r\n\t\t\r\n\t  \r\n\t  </span>);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    \r\n    return (\r\n\t<div>\r\n\t<p id=\"status\"></p>\r\n      \r\n      \r\n\t  {this.renderRecipe()}\r\n\t  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeDetail;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport QuoteBuilder from './QuoteBuilder.js';\nimport Login from './Login.js';\n\n\nfunction getDefaultVal(name, defaultval) {\n  let val = (new URLSearchParams(window.location.search)).get(name); //NB. is case sensitive!\n  if (!val || val === \"\") {\n      val = process.env.[\"REACT_APP_\"+name]; //NB. for react, env variables MUST be prefixed with REACT_APP_\n    }\n  if (!val || val === \"\")\n    val = defaultval;\n  return val;\n}\n\nfunction App() {\n    \n  const credentials = \"UserName=\"+getDefaultVal(\"UserName\", \"Guest\")+\"&Password=\"+getDefaultVal(\"Password\", \"Dev2021\")+\"&CompanyName=\"+getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\");\n  \n  let refno = getDefaultVal(\"RefNo\", \"Q00008\"); //NB. is case sensitive!\n  \n  /*if (!sessionStorage.UserName) {\n      return (\n      <Login />);\n    }*/\n  \n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"App-name\">\n        <h1>Configurator</h1>\n        <sup>Quote Builder</sup>\n        </div>\n      </header>\n\t  <QuoteBuilder reference={refno} credentials={credentials}/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import dotenv from 'dotenv';\r\n\r\nclass OmniReactComponent extends React.Component {\r\n  \r\n  \r\n  \r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    //dotenv.config();\r\n    const baseUrl = this.getDefaultVal(\"BaseUrl\", \"https://st.omniaccounts.co.za:55682\");\r\n    //console.log(baseUrl);\r\n    const credentials = \"UserName=\"+this.getDefaultVal(\"UserName\", \"Guest\")+\"&Password=\"+this.getDefaultVal(\"Password\", \"Dev2021\")+\"&CompanyName=\"+this.getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\");\r\n    //console.log(credentials);\r\n    \r\n\tthis.state = {\r\n      //quote: null,\r\n      baseUrl,\r\n      credentials,\r\n      userName: this.getDefaultVal(\"UserName\", \"Guest\"),\r\n      password: this.getDefaultVal(\"Password\", \"Dev2021\"),\r\n      companyName: this.getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\"),\r\n      isLoaded: false\r\n    };\r\n\t\r\n  }\r\n  \r\n  getDefaultVal = (name, defaultval) => {\r\n    let val = (new URLSearchParams(window.location.search)).get(name); //NB. is case sensitive!\r\n    if (!val || val === \"\") {\r\n      val = process.env.[\"REACT_APP_\"+name]; //NB. for react, env variables MUST be prefixed with REACT_APP_\r\n    }\r\n    if (!val || val === \"\")\r\n      val = defaultval;\r\n    return val;\r\n  }\r\n  \r\n  getUserName = () => {\r\n    return sessionStorage.UserName;\r\n  }\r\n  \r\n  setUserNameAndLogonToken = (userName, logonToken) => {\r\n    sessionStorage.UserName = userName;\r\n    sessionStorage.Token = logonToken;\r\n    \r\n    this.setState({\r\n            userName: userName,\r\n            password: logonToken\r\n          });\r\n  }\r\n  \r\n  DoLogonChanged = () => {\r\n    this.setState({\r\n            userName: sessionStorage.UserName,\r\n            password: sessionStorage.Token\r\n          });\r\n  }\r\n  \r\n  \r\n  restGet = (endpoint, id) => {\r\n    //##willneed a callback for what do do witht the success response\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default OmniReactComponent;"],"sourceRoot":""}