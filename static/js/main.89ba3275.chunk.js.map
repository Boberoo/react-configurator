{"version":3,"sources":["QuoteBuilder.js","RecipeDetail.js","logo.svg","App.js","reportWebVitals.js","index.js","Omni.js"],"names":["QuoteBuilder","props","getVolume","quote","state","width","length","height","getExtPrice","line","selling_price_per","quantity","selling_price","getTotalExcl","quote_lines","reduce","a","b","handleQuoteMasterChange","event","nam","target","name","val","value","setState","DoPriceChanged","index","newVal","isLoaded","error","submitQuote","preventDefault","saveQuote","renderQuoteDetails","map","stock_code","description","lineindex","OnPriceChanged","credentials","line_no","renderQuoteMaster","className","build_type","onChange","type","toLocaleString","undefined","maximumFractionDigits","id","statusmessage","url","this","baseUrl","reference","companyName","console","log","headers","Headers","set","Buffer","from","userName","password","toString","fetch","method","then","res","ok","json","text","result","requestOptions","body","JSON","stringify","data","setTimeout","loadQuote","prevProps","prevState","document","getElementById","innerHTML","onSubmit","status","action","OmniReactComponent","ROUNDUP","num","precision","Math","round","RecipeDetail","getWeight","recipe","recipe_lines","ext_weight","calcExtPrice","handleRecipeMasterChange","handleInputChange","checked","calcQty","formula","memo","quantity_required","replace","qty","eval","err","message","calcUnitPrice","price","renderRecipeDetail","align","stock_description","seq_no","renderRecipeDetails","expanded","checkbox","renderRecipe","includes","total","stock_recipe","loadRecipe","stockCode","getDefaultVal","defaultval","URLSearchParams","window","location","search","get","process","App","refno","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","restGet","endpoint","React","Component"],"mappings":"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","file":"static/js/main.89ba3275.chunk.js","sourcesContent":["//import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport RecipeDetail from './RecipeDetail.js';\r\nimport OmniReactComponent from './Omni.js';\r\n\r\n\r\n\r\n\r\nclass QuoteBuilder extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\tthis.state = {...this.state, \r\n      quote: null\r\n    };\r\n\t\r\n  }\r\n  \r\n static getDerivedStateFromProps(props, state) {\r\n    return {reference: props.reference };\r\n  } \r\n  \r\n  loadQuote() {\r\n    const url = this.state.baseUrl+\"/Quote/\"+this.props.reference+\"?CompanyName=\"+this.state.companyName;\r\n    \r\n    console.log(url);\r\n    \r\n    //let base64 = require('base-64');\r\n    let headers = new Headers();\r\n\r\n   //headers.append('Content-Type', 'text/json');\r\n    //headers.append('Authorization', 'Basic ' + base64.encode(this.state.userName + \":\" + this.state.password));\r\n    headers.set('Authorization', 'Basic ' + Buffer.from(this.state.userName + \":\" + this.state.password).toString('base64'));\r\n\t  \r\n\t  fetch(url, {method:'GET',\r\n        headers: headers\r\n       })\r\n      .then((res) => {\r\n\t\t  if (!res.ok) { \r\n\t\t    return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    return res.json();\r\n\t\t  }\r\n\t\t  })\r\n      .then(\r\n        (result) => {\r\n          //console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            quote: result.quote\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t    console.log(error);\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )  \r\n    //this.setState({quote: {acc_no: \"1234\", build_type: \"Trailer\", height: 4, width: 3, length: 9.5}});\r\n\t\r\n  }\r\n  \r\n  saveQuote(quote) {\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: '{ \"quote\" :  '+JSON.stringify(quote)+'  }'\r\n    };\r\n    fetch(this.state.baseUrl+\"/Quote/\"+this.props.reference+\"?\"+this.state.credentials, requestOptions)\r\n        .then((res) => {\r\n\t\t  if (!res.ok) { \r\n\t\t    return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    return res.text();\r\n\t\t  }\r\n\t\t  })\r\n        .then(data => this.setState({ statusmessage: data }),\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t\r\n          this.setState({\r\n            //isLoaded: true,\r\n            statusmessage: \"Error: \"+error\r\n          });\r\n        });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      \r\n\t  this.loadQuote()\r\n    }, 100)\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n  getVolume = () => {\r\n\t let quote = this.state.quote;\r\n     if (!quote) return 0;\t \r\n\t return quote.width * quote.length * quote.height;\r\n  }\r\n  \r\n  getExtPrice = (line) => {\r\n\t  \r\n   if (line.selling_price_per) \r\n     return line.quantity * line.selling_price / line.selling_price_per\r\n   else\r\n\t   return line.quantity * line.selling_price;\r\n  }\r\n  \r\n  getTotalExcl = () => {\r\n\t let quote = this.state.quote;\r\n     if (!quote) return 0;\t \r\n\t return quote.quote_lines.reduce((a, b) => a+this.getExtPrice(b), 0); \r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML =\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor;\r\n\t\"Updating..\";\r\n\treturn null; //??\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor;\r\n\t//\"Ready\";\r\n  }\r\n  \r\n  handleQuoteMasterChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\tconst quote = { ...this.state.quote, [nam]: val }\r\n    this.setState(() => ({ quote }))\r\n    //this.setState({...this.state.quote, [nam]: val});\r\n\t\r\n  }\r\n  \r\n  DoPriceChanged = (index, newVal) => {\r\n    //console.log(\"ssssssssssssasasas\")\r\n    const { error, isLoaded, quote } = this.state;\r\n    //console.log(isLoaded);\r\n    if (isLoaded && quote) {\r\n      //quote.quote_lines[index].selling_price = newVal;\r\n      //console.log(quote);\r\n      //this.setState(() => ({ quote }));\r\n      this.state.quote.quote_lines[index].selling_price = newVal;\r\n    }\r\n  }\r\n  \r\n   submitQuote = (event) => {\r\n    event.preventDefault();\r\n    //###do some basic validation?\r\n    //alert(\"You are submitting \" + this.state.reference);\r\n    this.saveQuote(this.state.quote);\r\n    //alert(this.state.statusmessage);\r\n  }\r\n  \r\n  renderQuoteDetails = (quote) => {\r\n\t  return (<ul>{quote.quote_lines.map((line, index) =>\r\n\t  <li key={line.line_no}>{line.quantity}x {line.stock_code} {line.description} <RecipeDetail {...quote} {...line} lineindex={index} OnPriceChanged={this.DoPriceChanged} credentials={this.props.credentials}/></li>)}</ul>); \r\n\t  \r\n\t  //NB. the ... makes it pass the object properties individually\r\n  }\r\n  \r\n  renderQuoteMaster = () => {\r\n\t//let quote = this.state.quote;  \r\n\tconst { error, isLoaded, quote } = this.state;\r\n    if (error) return <h2>Error: {error}</h2>;\r\n    if (!isLoaded) return <div>Loading...</div>;\r\n\tif (!quote) return (<h2>Loading..</h2>);  \r\n\t\t\r\n    return (<div><span className=\"form-group\"><label>\r\n          Select the build type:\r\n          <select name=\"build_type\" value={quote.build_type} onChange={this.handleQuoteMasterChange}>\r\n            <option value=\"Semi-Rigid\">Semi-Rigid</option>\r\n            <option value=\"Trailer\">Trailer</option>\r\n            <option value=\"Repair\">Repair</option>\r\n            <option value=\"Parts\">Parts</option>\r\n          </select>\r\n        </label></span>\r\n\t\t<span className=\"form-group\"><label> Length:\r\n      <input\r\n        type='number'\r\n        name='length'\r\n\t\tvalue={quote.length}\r\n        onChange={this.handleQuoteMasterChange}\r\n      /></label></span>\r\n      <span className=\"form-group\"><label> Width:\r\n      <input\r\n        type='number'\r\n        name='width'\r\n\t\tvalue={quote.width}\r\n        onChange={this.handleQuoteMasterChange}\r\n      /></label></span>\r\n\t  <span className=\"form-group\"><label> Height:\r\n      <input\r\n        type='number'\r\n        name='height'\r\n\t\tvalue={quote.height}\r\n        onChange={this.handleQuoteMasterChange}\r\n      /></label></span>\r\n\t  <p>Volume: {this.getVolume()+\" cubic metres\"}</p>\r\n\t  \r\n\t  {this.renderQuoteDetails(quote)}\r\n\t  <p className=\"grand-total\">Total: {this.getTotalExcl().toLocaleString(undefined, {maximumFractionDigits:2})}</p>\r\n    <p id=\"statusmessage\">{this.state.statusmessage}</p>\r\n\t  </div>);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    //const carname = \"Ford\";\r\n    //console.log(this.props);\r\n    return (\r\n      <form onSubmit={this.submitQuote}>\r\n      <h1>Enter the type and dimensions</h1>\r\n      \r\n    <p id=\"status\">{this.state.status}</p>\r\n\t  {this.renderQuoteMaster()}\r\n\t  <button type=\"submit\" action=\"save\">Save Quote</button> <button type=\"submit\" action=\"saveas\">Save As New Quote</button> <button type=\"submit\" action=\"saveasrev\">Save As Revised Quote</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuoteBuilder;","//import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport OmniReactComponent from './Omni.js';\r\n\r\n\r\nfunction ROUNDUP(num, precision) {\r\n  \r\n  \r\n  if (!precision) //make an optional param\r\n    precision = 0;\r\n    \r\n  //console.log(precision);\r\n  //console.log(10**precision);\r\n  \r\n  return Math.round((num+(0.499/10**precision)) * 10**precision) / 10**precision;\r\n}\r\n\r\nclass RecipeDetail extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {...this.state, \r\n      recipe: null,\r\n\t    expanded: false\r\n    };\r\n    \r\n  }\r\n  \r\n static getDerivedStateFromProps(props, state) {\r\n    return {stockCode: props.stock_code };\r\n  } \r\n  \r\n  loadRecipe() {\r\n\t  //console.log(this.props.stock_code);\r\n\t  ///#######this report is a stock list, need a report or a proper endpoint, will use as POC for now though\r\n\t//fetch(\"http://st.omniaccounts.co.za:55683/Report/Recipe Export?Stock Code=\"+this.props.stock_code+\"&\"+this.props.credentials)\r\n  //fetch(\"http://st.omniaccounts.co.za:55683/Stock Recipe/\"+this.props.stock_code+\"?\"+this.props.credentials)\r\n  fetch(this.state.baseUrl+\"/Stock Recipe/\"+this.props.stock_code+\"?\"+this.state.credentials)\r\n      .then((res) => {\r\n\t\t  if (!res.ok) { \r\n\t\t    return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    //res.text().then(text => {console.log(text)});\r\n\t\t    return res.json();\r\n\t\t  }\r\n\t\t  })\r\n      .then(\r\n        (result) => {\r\n\t\t\t\r\n\t\t      console.log(JSON.stringify(result));\r\n\t\t  \r\n          this.setState({\r\n            isLoaded: true,\r\n            recipe: result.stock_recipe\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )  \r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      \r\n\t  this.loadRecipe()\r\n    }, 100)\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n  getWeight = () => {\r\n\t let recipe = this.state.recipe;\r\n     if (!recipe) return 0;\t \r\n\t return recipe.recipe_lines.reduce((a, b) => a+b.ext_weight, 0); \r\n  }\r\n  \r\n  getTotalExcl = () => {\r\n\t let recipe = this.state.recipe;\r\n     if (!recipe) return 0;\t \r\n\t return recipe.recipe_lines.reduce((a, b) => a+this.calcExtPrice(b), 0); \r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML =\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor;\r\n\t\"Updating..\";\r\n\treturn null; //??\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor;\r\n\t//\"Ready\";\r\n  }\r\n  \r\n  handleRecipeMasterChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\tconst recipe = { ...this.state.recipe, [nam]: val }\r\n    this.setState(() => ({ recipe }))\r\n    //this.setState({...this.state.quote, [nam]: val});\r\n\t\r\n  }\r\n  \r\n  \r\n  handleInputChange = (event) => {\r\n    let nam = event.target.name;\r\n    const val = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\r\n\tthis.setState({[nam]: val});\r\n\t\r\n  }\r\n   \r\n   calcQty = (line) => {\r\n     let formula = line.memo;\r\n     \r\n     //####TEST\r\n     //formula = \"HM*5\";\r\n     \r\n     if (!formula || formula === \"\")\r\n       return line.quantity_required;\r\n     \r\n     //####CUSTOM RULES#### - sort of\r\n     \r\n     formula = formula.replace(\"LM\", this.props.length);\r\n     formula = formula.replace(\"WM\", this.props.width);\r\n     formula = formula.replace(\"HM\", this.props.height);\r\n     formula = formula.replace(\"L\", this.props.length*1000);\r\n     formula = formula.replace(\"W\", this.props.width*1000);\r\n     formula = formula.replace(\"H\", this.props.height*1000);\r\n     \r\n     //console.log(ROUNDUP(8500/1220)); //should be 7 add to unit tests?\r\n     //console.log((8500/1220));\r\n     //console.log(eval('ROUNDUP(8500/1220),0')); NB eval evaluates this to 0, no error - the comma in this formula should have been inside the brackets\r\n     \r\n     try {\r\n       let qty = ROUNDUP(eval(formula), 3); //always make max 3 decimal places\r\n       console.log(formula+\" = \"+qty);\r\n       return qty;\r\n     }\r\n     catch(err) {\r\n       const message = \"Error on formula \"+formula+\": \"+err.message;\r\n       console.log(message);\r\n       document.getElementById(\"status\").innerHTML = message\r\n       \r\n     }     \r\n     \r\n   }\r\n   \r\n   calcUnitPrice = (line) => {\r\n     //####CUSTOM RULES####\r\n     //let formula = \"if (this.props.build_type) this.props.discount1\"; can let them put price formula somewhere too? Maybe have a memo on the Job Category..?\r\n         \r\n     //if (!formula || formula === \"\")\r\n     //  return line.quantity_required;\r\n     \r\n     //formula = formula.replace(\"D1\", this.props.length);\r\n     //formula = formula.replace(\"D2\", this.props.width);\r\n     //formula = formula.replace(\"SP3\", line.selling_price_3);\r\n     \r\n     /*console.log(formula);\r\n     \r\n     try {\r\n       let qty = eval(formula);\r\n       return qty;\r\n     }\r\n     catch(err) {\r\n       document.getElementById(\"error\").innerHTML = err.message;\r\n       \r\n     } */\r\n     \r\n     //let price = line.stock_selling_price_3;\r\n     let price = 100; //####need to look up from stock code - unless we make the recipe a report, and add those on as calc fields\r\n     \r\n     if (this.props.build_type === \"Trailer\")\r\n       price *= 1.3\r\n     else if (this.props.build_type === \"Semi-Rigid\")\r\n       price *= 1.5;\r\n     else if (this.props.build_type === \"Parts\")\r\n       price *= 5.5;\r\n     \r\n\r\n     return price;\r\n     \r\n   }\r\n   \r\n   calcExtPrice = (line) => {\r\n     return this.calcUnitPrice(line) * this.calcQty(line);\r\n   }\r\n   \r\n   renderRecipeDetail = (line) => {\r\n\t  \r\n    //let subRecipe; just use a report that expands all detail, and includes the necessary stock info too, ie SP3 and discount 1..5\r\n    //if (line.manufacture_sub_recipe)\r\n    //  subRecipe = <RecipeDetail {...this.props} {...line} />;\r\n    \r\n\t  \r\n   //return (<li key={line.seq_no}>{this.calcQty(line)}x {line.stock_code} {line.stock_description} {this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})} {subRecipe} </li>);\r\n   //return (<li key={line.seq_no}>{this.calcQty(line)}x {line.stock_code} {line.stock_description} {this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})} </li>);\r\n   return (<tr key={line.seq_no}><td align=\"Right\">{this.calcQty(line)}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td align=\"Right\">{this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})}</td></tr>);\r\n   \r\n  }\r\n   \r\n  renderRecipeDetails = (recipe) => {\r\n\t  const expanded = this.state.expanded;\r\n\t  const checkbox = <label>\r\n          Expand:\r\n          <input\r\n            name=\"expanded\"\r\n            type=\"checkbox\"\r\n            checked={this.state.expanded}\r\n            onChange={this.handleInputChange} />\r\n        </label>;\r\n        \r\n\t  if (!expanded)\r\n\t    return checkbox;\t  \r\n\t  else\r\n\t    return (<span>{checkbox}<table className=\"table-center recipe-detail\"><tbody>{recipe.recipe_lines.map((line) =>\r\n      this.renderRecipeDetail(line))}</tbody></table></span>);\r\n  }\r\n  \r\n  renderRecipe = () => {\r\n\t//let quote = this.state.quote;  \r\n\tconst { error, isLoaded, recipe } = this.state;\r\n  if (error) \r\n    if (error.includes(\"does not have a recipe\"))\r\n      return <sup>{error}</sup>;\r\n    else\r\n      return <h2>Error: {error}</h2>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\tif (!recipe) return (<h2>Loading..</h2>);  \r\n  \r\n  const total = this.getTotalExcl();\r\n  \r\n  if (this.props.OnPriceChanged) {\r\n    this.props.OnPriceChanged(this.props.lineindex, total);\r\n  }\r\n\t\t\r\n   return (<span><b>Total: {total.toLocaleString(undefined, {maximumFractionDigits:2})}</b>&nbsp;\r\n\t{this.renderRecipeDetails(recipe)}\r\n\t\t\r\n\t  \r\n\t  </span>);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    \r\n    return (\r\n\t<div>\r\n\t<p id=\"status\"></p>\r\n      \r\n      \r\n\t  {this.renderRecipe()}\r\n\t  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeDetail;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport QuoteBuilder from './QuoteBuilder.js';\n\n\nfunction getDefaultVal(name, defaultval) {\n  let val = (new URLSearchParams(window.location.search)).get(name); //NB. is case sensitive!\n  if (!val || val === \"\")\n    val = process.env.name;\n  if (!val || val === \"\")\n    val = defaultval;\n  return val;\n}\n\nfunction App() {\n    \n  const credentials = \"UserName=\"+getDefaultVal(\"UserName\", \"Guest\")+\"&Password=\"+getDefaultVal(\"Password\", \"Dev2021\")+\"&CompanyName=\"+getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\");\n  \n  let refno = getDefaultVal(\"RefNo\", \"Q00008\"); //NB. is case sensitive!\n  \n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"App-name\">\n        <h1>Configurator</h1>\n        <sup>Quote Builder</sup>\n        </div>\n      </header>\n\t  <QuoteBuilder reference={refno} credentials={credentials}/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import dotenv from 'dotenv';\r\n\r\nclass OmniReactComponent extends React.Component {\r\n  \r\n  \r\n  \r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    //dotenv.config();\r\n    const baseUrl = this.getDefaultVal(\"BaseUrl\", \"http://st.omniaccounts.co.za:55683\");\r\n    //console.log(baseUrl);\r\n    const credentials = \"UserName=\"+this.getDefaultVal(\"UserName\", \"Guest\")+\"&Password=\"+this.getDefaultVal(\"Password\", \"Dev2021\")+\"&CompanyName=\"+this.getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\");\r\n    //console.log(credentials);\r\n    \r\n\tthis.state = {\r\n      //quote: null,\r\n      baseUrl,\r\n      credentials,\r\n      userName: this.getDefaultVal(\"UserName\", \"Guest\"),\r\n      password: this.getDefaultVal(\"Password\", \"Dev2021\"),\r\n      companyName: this.getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\"),\r\n      isLoaded: false\r\n    };\r\n\t\r\n  }\r\n  \r\n  getDefaultVal = (name, defaultval) => {\r\n    let val = (new URLSearchParams(window.location.search)).get(name); //NB. is case sensitive!\r\n    if (!val || val === \"\") {\r\n      val = process.env.[\"REACT_APP_\"+name]; //NB. for react, env variables MUST be prefixed with REACT_APP_\r\n  }\r\n    if (!val || val === \"\")\r\n      val = defaultval;\r\n    return val;\r\n  }\r\n  \r\n  restGet = (endpoint, id) => {\r\n    //##willneed a callback for what do do witht the success response\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default OmniReactComponent;"],"sourceRoot":""}