{"version":3,"sources":["Login.js","QuoteBuilder.js","RecipeDetail.js","logo.svg","App.js","reportWebVitals.js","index.js","Omni.js"],"names":["Login","props","handleChange","event","nam","target","name","val","value","credentials","state","setState","submitForm","preventDefault","setUserNameAndLogonToken","username","password","onLogon","requestOptions","method","headers","body","JSON","stringify","fetch","this","baseUrl","userName","then","res","ok","text","data","statusmessage","error","prevProps","prevState","document","getElementById","innerHTML","onSubmit","className","htmlFor","type","placeholder","onChange","id","status","action","OmniReactComponent","QuoteBuilder","saveQuote","quote","auth","Buffer","from","toString","restMethod","url","encodeURIComponent","reference","companyName","mode","redirect","getVolume","width","length","height","getExtPrice","line","selling_price_per","quantity","selling_price","getTotalExcl","quote_lines","reduce","a","b","handleQuoteMasterChange","handleInput","e","doPriceChanged","index","newVal","isLoaded","refreshTimeout","clearTimeout","setTimeout","total","submitQuote","renderQuoteDetails","map","stock_code","description","lineindex","OnPriceChanged","line_no","renderQuoteMaster","build_type","formatQty","formatPrice","json","console","log","result","loadQuote","getUserName","onClick","DoLogonChanged","ROUNDUP","num","precision","Math","round","ROUNDDOWN","trunc","IIF","condition","trueresult","falseresult","RecipeDetail","getWeight","recipe_lines","ext_weight","calcExtPrice","handleRecipeMasterChange","handleInputChange","checked","calcId","parent_stock_code","sequence_number","calcQty","formula","recipe_memo","has_recipe","toUpperCase","replace","qty","eval","err","message","calcUnitPrice","price","stock_unit_selling_price_3","abs","stock_discount_2","stock_discount_1","stock_discount_5","renderRecipeDetail","align","stock_description","renderRecipeDetails","expanded","checkbox","renderRecipe","includes","stock_parent_code","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","configurator_recipe_detail","loadRecipe","stockCode","getDefaultVal","defaultval","URLSearchParams","window","location","search","get","process","App","refno","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","sessionStorage","UserName","logonToken","Token","restGet","endpoint","React","Component"],"mappings":"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","file":"static/js/main.c1716f0e.chunk.js","sourcesContent":["import OmniReactComponent from './Omni.js';\r\n\r\nclass Login extends OmniReactComponent {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\t  this.state = {...this.state, \r\n                  credentials: null };\r\n  }\r\n  \r\n  static getDerivedStateFromProps(props, state) {\r\n    return {userName: props.userName };\r\n  } \r\n  \r\n  getLogonToken(credentials) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: '{ \"quote\" : '+JSON.stringify(credentials)+' }'\r\n    };\r\n    fetch(this.state.baseUrl+\"/Logon/\"+this.props.userName+\"?\"+this.state.credentials, requestOptions)\r\n      .then((res) => {\r\n\t      if (!res.ok) { \r\n          return res.text().then(text => {throw text});\r\n      } \r\n\t\t  else {\r\n\t\t    return res.text();\r\n\t\t  }\r\n\t\t  })\r\n      .then(data => this.setState({ statusmessage: data }),\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\t\t\t\r\n          this.setState({\r\n            //isLoaded: true,\r\n            statusmessage: \"Error: \"+error\r\n          });\r\n        });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    \r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML = \"Updating..\";\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor;\t\r\n\t  return null; //??\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";  \r\n  }\r\n  \r\n  handleChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\t  const credentials = { ...this.state.credentials, [nam]: val }\r\n    this.setState(() => ({ credentials }))\r\n  }\r\n  \r\n    \r\n  submitForm = (event) => {\r\n    event.preventDefault();\r\n    this.setUserNameAndLogonToken(this.state.credentials.username, this.state.credentials.password);\r\n    this.props.onLogon();\r\n  }\r\n  \r\n  \r\n  render() {\r\n    //const [username, setUsername] = useState(\"\");\r\n    //const [password, setPassword] = useState(\"\");\r\n  \r\n    return (\r\n      <form onSubmit={this.submitForm}>\r\n        <h1>Please enter your Omni logon details</h1>\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"username\">User Name: \r\n        <input\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          placeholder=\"User Name\"\r\n          className=\"form-control\"\r\n          onChange={this.handleChange}\r\n        /></label></div>\r\n        <div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password: \r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"form-control\"\r\n            onChange={this.handleChange}\r\n          /></label></div>\r\n        </div>\r\n        <p id=\"status\">{this.state.status}</p>\r\n\t      <button type=\"submit\" action=\"login\">Login</button>\r\n      </form>\r\n    );    \r\n  }\r\n}\r\n\r\nexport default Login;","import RecipeDetail from './RecipeDetail.js';\r\nimport Login from './Login.js';\r\nimport OmniReactComponent from './Omni.js';\r\n\r\n\r\nclass QuoteBuilder extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshTimeout = null;\r\n  \tthis.state = {...this.state, \r\n      quote: null, action: \"save\", total: 0.0\r\n    };\t\r\n  }\r\n  \r\n  static getDerivedStateFromProps(props, state) {\r\n    return {reference: props.reference };\r\n  } \r\n  \r\n  loadQuote() {\r\n    const url = this.state.baseUrl+\"/Quote/\"+encodeURIComponent(this.props.reference)+\"?CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    \r\n    //console.log(url);\r\n    \r\n    const auth = 'Basic ' + Buffer.from(this.state.userName + ':' + this.state.password).toString('base64');\r\n\t  \r\n\t  fetch(url, \r\n          { method: 'GET',\r\n            mode: 'cors',\r\n            redirect: 'follow',\r\n            credentials: 'include', //without this, authorizaion header won't get passed through to cross origin call\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'Authorization': auth\r\n            }\r\n          })\r\n      .then((res) => {\r\n\t  \t  if (!res.ok) {         \r\n\t\t      return res.text().then(text => {console.log(text); throw text;});\r\n\t\t    } \r\n\t\t    else {\r\n\t\t      return res.json();\r\n\t\t    }\r\n\t\t  })\r\n      .then(\r\n        (result) => {\r\n          //console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            quote: result.quote\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t    console.log(JSON.stringify(error));\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )  \r\n  }\r\n  \r\n  saveQuote = (quote, action) => {\r\n    \r\n    const auth = 'Basic ' + Buffer.from(this.state.userName + ':' + this.state.password).toString('base64');    \r\n    let restMethod = 'POST';\r\n    \r\n    let url = this.state.baseUrl+\"/Quote/\";\r\n    if (action === \"saveasrev\") {\r\n      url += encodeURIComponent(this.props.reference+\"-1\");\r\n    }\r\n    else if (action === \"saveas\") {\r\n      //new quote, don't specify a reference  \r\n      //clear quote.source_type..?\r\n    }\r\n    else { //(action == \"save\")\r\n      url += this.props.reference;\r\n      restMethod = 'PUT';\r\n    }\r\n    \r\n    url += \"?CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    \r\n    const requestOptions = {\r\n        method: restMethod,\r\n        mode: 'cors',\r\n        redirect: 'follow',\r\n        credentials: 'include', //without this, authorizaion header won't get passed through to cross origin call\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': auth\r\n        },\r\n        body: '{ \"quote\" : '+JSON.stringify(quote)+' }'\r\n    };\r\n    \r\n    fetch(url, requestOptions)\r\n      .then((res) => {\r\n\t  \t  if (!res.ok) { \r\n\t\t      return res.text().then(text => {throw text});\r\n\t\t    } \r\n\t\t    else {\r\n\t\t      return res.text();\r\n\t  \t  }\r\n\t\t    })\r\n      .then(data => this.setState({ statusmessage: data }),\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\t\t\t\r\n          this.setState({\r\n            //isLoaded: true,\r\n            statusmessage: \"Error: \"+error\r\n          });\r\n        });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(() => {      \r\n\t  this.loadQuote()\r\n    }, 100)\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n  getVolume = () => {\r\n\t let quote = this.state.quote;\r\n   if (!quote) return 0;\t \r\n\t return quote.width * quote.length * quote.height;\r\n  }\r\n  \r\n  getExtPrice = (line) => {\r\n   if (line.selling_price_per) \r\n     return line.quantity * line.selling_price / line.selling_price_per\r\n   else\r\n\t   return line.quantity * line.selling_price;\r\n  }\r\n  \r\n  getTotalExcl = () => {\r\n\t let quote = this.state.quote;\r\n   if (!quote) return 0;\t \r\n\t return quote.quote_lines.reduce((a, b) => a+this.getExtPrice(b), 0); \r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML = \"Updating..\";\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor; just an example of how this can be used if need be\r\n    return null; //??need to return anything?\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor; just an example of how this can be used if need be \r\n  }\r\n  \r\n  handleQuoteMasterChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\t  const quote = { ...this.state.quote, [nam]: val }\r\n    this.setState(() => ({ quote }))\t\r\n  }\r\n  \r\n  handleInput = e => {\r\n    this.setState({[e.target.name]: e.target.value});     \r\n  }\r\n  \r\n  doPriceChanged = (index, newVal) => {\r\n    const { error, isLoaded, quote } = this.state;\r\n    if (isLoaded && quote) {\r\n      if (this.refreshTimeout)\r\n         clearTimeout(this.refreshTimeout);\r\n      //quote.quote_lines[index].selling_price = newVal;\r\n      //console.log(quote);\r\n      //this.setState(() => ({ quote }));\r\n      this.state.quote.quote_lines[index].selling_price = newVal;\r\n      this.refreshTimeout = setTimeout(() =>{ this.setState({ total:  this.getTotalExcl() }); }, 50);     \r\n    }\r\n  }\r\n     \r\n  submitQuote = (event) => {\r\n    event.preventDefault();\r\n    //###do some basic validation?\r\n    //alert(\"You are submitting \" + this.state.reference);\r\n    //alert(event.target.action);\r\n    //alert(this.state.action);\r\n    this.saveQuote(this.state.quote, this.state.action);\r\n    //alert(this.state.statusmessage);    \r\n  }\r\n  \r\n  renderQuoteDetails = (quote) => {\r\n\t  return (<ul>{quote.quote_lines.map((line, index) =>\r\n\t  <li key={line.line_no}>{line.quantity}x {line.stock_code} {line.description} <RecipeDetail {...quote} {...line} lineindex={index} OnPriceChanged={this.doPriceChanged} credentials={this.props.credentials}/></li>)}</ul>); \t  \r\n\t  //NB. the ... makes it pass the object properties individually\r\n  }\r\n  \r\n  renderQuoteMaster = () => {\r\n\t  const { error, isLoaded, quote } = this.state;\r\n    if (error) return <h2>Error: {error}</h2>;\r\n    if (!isLoaded) return <div>Loading...</div>;\r\n\t  if (!quote) return (<h2>Loading..</h2>);  \r\n  \r\n\t  //NB. uses label inside span to\tkeep the label and input together no matter what the screen width, but uses optimal space all the time\r\n    return (<div>\r\n            <span className=\"form-group\"><label>Select the build type:\r\n              <select name=\"build_type\" className=\"form-control\" value={quote.build_type} onChange={this.handleQuoteMasterChange}>\r\n                <option value=\"Semi-Rigid\">Semi-Rigid</option>\r\n                <option value=\"Trailer\">Trailer</option>\r\n                <option value=\"Repair\">Repair</option>\r\n                <option value=\"Parts\">Parts</option>\r\n              </select>\r\n            </label></span>\r\n\t\t        <span className=\"form-group\"><label> Length:\r\n              <input\r\n                type='number'\r\n                name='length'\r\n                className=\"form-control\"\r\n\t\t            value={quote.length}\r\n                onChange={this.handleQuoteMasterChange}\r\n              /></label></span>\r\n              <span className=\"form-group\"><label> Width:\r\n              <input\r\n                type='number'\r\n                name='width'\r\n                className=\"form-control\"\r\n\t\t            value={quote.width}\r\n                onChange={this.handleQuoteMasterChange}\r\n              /></label></span>\r\n\t          <span className=\"form-group\"><label> Height:\r\n              <input\r\n                type='number'\r\n                name='height'\r\n                className=\"form-control\"\r\n\t\t            value={quote.height}\r\n                onChange={this.handleQuoteMasterChange}\r\n              /></label></span>\r\n\t          <p>Volume: {this.formatQty(this.getVolume())+\" cubic metres\"}</p>\r\n\t          {this.renderQuoteDetails(quote)}\r\n\t          <p className=\"grand-total\">Total: {this.formatPrice(this.getTotalExcl())}</p>\r\n            <p id=\"statusmessage\">{this.state.statusmessage}</p>\r\n\t          </div>);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    if (!this.getUserName()) {\r\n      return (<Login onLogon={this.DoLogonChanged}/>);\r\n    }\r\n    \r\n    return (\r\n      <form onSubmit={this.submitQuote}>\r\n        <h1>Enter the type and dimensions</h1>      \r\n        <p id=\"status\">{this.state.status}</p>\r\n\t      {this.renderQuoteMaster()}\r\n\t      <button type=\"submit\" name=\"action\" value=\"save\" onClick={this.handleInput}>Save Quote</button> <button type=\"submit\" name=\"action\" value=\"saveas\" onClick={this.handleInput}>Save As New Quote</button> <button type=\"submit\" name=\"action\" value=\"saveasrev\" onClick={this.handleInput}>Save As Revised Quote</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuoteBuilder;","import OmniReactComponent from './Omni.js';\r\n\r\n\r\n/***Start of Custom Functions***/\r\n\r\n//Note: these functions are uppercase, as they are simulating the Excel equivalents, and that is how they are formatted in the expressions the end user created\r\nfunction ROUNDUP(num, precision) {  \r\n  if (!precision) //is an optional param\r\n    precision = 0;\r\n  \r\n  return Math.round((num+(0.499/10**precision)) * 10**precision) / 10**precision;\r\n}\r\n\r\n//not sure if needed, but Omni Trucks test data contains these, and I see it is a valid Excel function too:\r\n//To round down to the nearest specified place, use the ROUNDDOWN function. >> useful for when qty is negative, and you want to round \"up\"\r\nfunction ROUNDDOWN(num, precision) { \r\n  if (!precision) //is an optional param\r\n    precision = 0;\r\n  \r\n  return Math.trunc(num * 10**precision) / 10**precision;\r\n}\r\n\r\nfunction IIF(condition, trueresult, falseresult) {\r\n  if (condition)\r\n    return trueresult\r\n  else\r\n    return falseresult;\r\n}\r\n\r\n/***End of custom functions***/\r\n\r\n\r\nclass RecipeDetail extends OmniReactComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {...this.state, \r\n      recipe_lines: null,\r\n\t    expanded: false\r\n    };    \r\n  }\r\n  \r\n  static getDerivedStateFromProps(props, state) {\r\n    return {stockCode: props.stock_code };\r\n  } \r\n  \r\n  loadRecipe() {\r\n\t  //console.log(this.props.stock_code);\r\n    //const url = this.state.baseUrl+\"/Stock Recipe/\"+this.props.stock_code+\"?CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    //const url = this.state.baseUrl+\"/Report/Recipe Export - Individual?IFGCode=\"+encodeURIComponent(this.props.stock_code)+\"&CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    const url = this.state.baseUrl+\"/Report/Configurator Recipe Detail?IFGCode=\"+encodeURIComponent(this.props.stock_code)+\"&CompanyName=\"+encodeURIComponent(this.state.companyName);\r\n    \r\n    //console.log(url);\r\n        \r\n    const auth = 'Basic ' + Buffer.from(this.state.userName + ':' + this.state.password).toString('base64');\r\n    \r\n\t  ///#######this report is a stock list, need a report or a proper endpoint, will use as POC for now though\r\n\t//fetch(\"http://st.omniaccounts.co.za:55683/Report/Recipe Export?Stock Code=\"+this.props.stock_code+\"&\"+this.props.credentials)\r\n  //fetch(\"http://st.omniaccounts.co.za:55683/Stock Recipe/\"+this.props.stock_code+\"?\"+this.props.credentials)\r\n  //fetch(this.state.baseUrl+\"/Stock Recipe/\"+this.props.stock_code+\"?\"+this.state.credentials)\r\n  fetch(url, \r\n        { method: 'GET',\r\n          mode: 'cors',\r\n          redirect: 'follow',\r\n          credentials: 'include', //without this, authorizaion header won't get passed through to cross origin call        \r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': auth\r\n          }\r\n        })\r\n      .then((res) => {\r\n\t\t    if (!res.ok) { \r\n\t\t      return res.text().then(text => {throw text});\r\n\t\t  } \r\n\t\t  else {\r\n\t\t    //res.text().then(text => {console.log(text)});\r\n\t\t    return res.json();\r\n\t\t  }\r\n\t\t  })\r\n      .then(\r\n        (result) => {\r\n\t\t      //console.log(JSON.stringify(result));\r\n\t\t  \r\n          this.setState({\r\n            isLoaded: true,\r\n            //recipe: result.stock_recipe\r\n            //recipe_lines: result.recipe_export___individual\r\n            recipe_lines: result.configurator_recipe_detail\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n\t\t\t\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )  \r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(() => {      \r\n\t    this.loadRecipe()\r\n    }, 100)\r\n  }\r\n  \r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  \r\n  getWeight = () => {\r\n\t let recipe_lines = this.state.recipe_lines;\r\n     if (!recipe_lines) return 0;\t \r\n\t return recipe_lines.reduce((a, b) => a+b.ext_weight, 0); \r\n  }\r\n  \r\n  getTotalExcl = () => {\r\n\t let recipe_lines = this.state.recipe_lines;\r\n     if (!recipe_lines) return 0;\t \r\n\t return recipe_lines.reduce((a, b) => a+this.calcExtPrice(b), 0); \r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    document.getElementById(\"status\").innerHTML = \"Updating..\";\r\n    //\"Before the update, the favorite was \" + prevState.favoritecolor; example of what can be done here\t\r\n\t  return null; //??need to return anything?\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    document.getElementById(\"status\").innerHTML = \"\";\r\n    //\"The updated favorite is \" + this.state.favoritecolor; example of what can be done here\r\n  }\r\n  \r\n  handleRecipeMasterChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n\t  const recipe_lines = { ...this.state.recipe_lines, [nam]: val };\r\n    this.setState(() => ({ recipe_lines }));\r\n  } \r\n  \r\n  handleInputChange = (event) => {\r\n    let nam = event.target.name;\r\n    const val = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\r\n\t  this.setState({[nam]: val});\r\n  }\r\n  \r\n  calcId = (line) => {\r\n    return line.parent_stock_code +'_'+ line.sequence_number.toString();\r\n  }\r\n   \r\n  calcQty = (line) => {\r\n     //let formula = line.memo;\r\n     let formula = line.recipe_memo;\r\n     \r\n     if (line.has_recipe === \"Y\") return 0; //skip main recipe and intermediate recipe, only add up the parts\r\n     \r\n     //eg formula = \"ROUNDUP(HM*5,1)\";\r\n     \r\n     if (!formula || formula === \"\")\r\n       //return line.quantity_required;\r\n       return line.quantity;\r\n     \r\n     formula = formula.toUpperCase();\r\n     \r\n     //####CUSTOM RULES#### - supports Length, Width and Height and Excel type formulae\r\n     \r\n     formula = formula.replace(/LM/g, this.props.length*1.0); //the *1.0 is in case you type in 02 in the input box, javascript calc then gives errors about quartets\r\n     formula = formula.replace(/WM/g, this.props.width*1.0);\r\n     formula = formula.replace(/HM/g, this.props.height*1.0);\r\n     formula = formula.replace(/\\bL\\b/g, this.props.length*1000);\r\n     formula = formula.replace(/\\bW\\b/g, this.props.width*1000); //the \\b makes sure it's not the W in ROUNDDOWN() for example\r\n     formula = formula.replace(/\\bH\\b/g, this.props.height*1000);\r\n           \r\n     //console.log(ROUNDUP(8500/1220)); //should be 7 add to unit tests?\r\n     //console.log((8500/1220));\r\n     //console.log(eval('ROUNDUP(8500/1220),0')); NB eval evaluates this to 0, no error - the comma in this formula should have been inside the brackets\r\n     \r\n     //need to maybe do some safety check on formula before calling eval? Maybe limit the length? \r\n     \r\n     try {\r\n       let qty = line.quantity * ROUNDUP(eval(formula), 3); //always make max 3 decimal places\r\n       //console.log(formula+\" = \"+qty);\r\n       return qty;\r\n     }\r\n     catch(err) {\r\n       const message = \"Error on formula \"+formula+\": \"+err.message;\r\n       console.log(message); //NB. leave in, not a regular temp debug message\r\n       document.getElementById(\"status\").innerHTML = message       \r\n     }         \r\n   }\r\n   \r\n   calcUnitPrice = (line) => {\r\n     //####CUSTOM RULES#### maybe build type can contain the discount level number to use, and be changed to get the lookup list from Omni, eg. Trailer - 1, Repairs - 3, etc\r\n     \r\n     let price = line.stock_unit_selling_price_3; //this is usually the min selling price / landed cost / break even price in most systems\r\n     \r\n     if (this.props.build_type === \"Trailer\")\r\n       price *= (1+Math.abs(line.stock_discount_2)/100)   //use abs(), as theoretially these should be captured as negative discounts, but they may have captured them as positives\r\n     else if (this.props.build_type === \"Semi-Rigid\")\r\n       price *= (1+Math.abs(line.stock_discount_1)/100);\r\n     else if (this.props.build_type === \"Parts\")\r\n       price *= (1+Math.abs(line.stock_discount_5)/100);\r\n     \r\n     price = ROUNDUP(price, 1); //must be rounded to at least 2 dec place. Customer wants the price prettier though so making nearest 10c - could maybe also use MROUND to 0.05?\r\n\r\n     return price;     \r\n   }\r\n   \r\n   calcExtPrice = (line) => {\r\n     return Math.round(this.calcUnitPrice(line) * this.calcQty(line), 2);\r\n   }\r\n   \r\n   renderRecipeDetail = (line) => {\t  \r\n    //let subRecipe; just use a report that expands all detail, and includes the necessary stock info too, ie SP3 and discount 1..5\r\n    //if (line.manufacture_sub_recipe)\r\n    //  subRecipe = <RecipeDetail {...this.props} {...line} />;\r\n    \r\n    if (line.has_recipe === \"Y\") return null;\r\n\t  if (line.has_recipe === \"N\" && !line.parent_stock_code) return null; //ideally want no recipe items at all, but one line does get returned, so need to check for this here\r\n    \r\n   //return (<li key={line.seq_no}>{this.calcQty(line)}x {line.stock_code} {line.stock_description} {this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})} {subRecipe} </li>);\r\n   //return (<li key={line.seq_no}>{this.calcQty(line)}x {line.stock_code} {line.stock_description} {this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})} </li>);\r\n   //return (<tr key={line.seq_no}><td align=\"Right\">{this.calcQty(line)}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td>{line.recipe_memo}</td><td align=\"Right\">{this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})}</td></tr>);\r\n   //return (<tr key={line.sequence_number}><td align=\"Right\">{this.calcQty(line)}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td>{line.recipe_memo}</td><td align=\"Right\">{this.calcExtPrice(line).toLocaleString(undefined, {maximumFractionDigits:2})}</td></tr>);\r\n   //return (<tr key={this.calcId(line)}><td align=\"Right\">{this.calcQty(line)}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td>{line.recipe_memo}</td><td align=\"Right\">{this.calcExtPrice(line).toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2})}</td></tr>);\r\n   return (<tr key={this.calcId(line)}><td align=\"Right\">{this.formatQty(this.calcQty(line))}</td><td align=\"Left\">{line.stock_code}</td><td>{line.stock_description}</td><td>{line.recipe_memo}</td><td align=\"Right\">{this.formatPrice(this.calcExtPrice(line))}</td></tr>);   \r\n  }\r\n   \r\n  renderRecipeDetails = (recipe_lines) => {\r\n\t  const expanded = this.state.expanded;\r\n\t  const checkbox = <label>\r\n          Expand:\r\n          <input\r\n            name=\"expanded\"\r\n            type=\"checkbox\"\r\n            checked={this.state.expanded}\r\n            onChange={this.handleInputChange} />\r\n        </label>;\r\n        \r\n\t  if (!expanded)\r\n\t    return checkbox;\t  \r\n\t  else\r\n\t    return (<span>{checkbox}<table className=\"table-center recipe-detail\"><tbody>{recipe_lines.map((line) => this.renderRecipeDetail(line))}</tbody></table></span>);\r\n  }\r\n  \r\n  renderRecipe = () => {\t\r\n    const { error, isLoaded, recipe_lines } = this.state;\r\n    \r\n    if (error) \r\n      if (error.includes(\"does not have a recipe\"))\r\n        return <sup>{error}</sup>;\r\n      else\r\n        return <h2>Error: {error}</h2>;\r\n      \r\n    if (!isLoaded) return <div>Loading...</div>;\r\n\t  if (!recipe_lines) return (<h2>Loading..</h2>); \r\n\r\n    if (recipe_lines.length === 0)\r\n      return <sup>No recipe</sup>;  \r\n  \r\n    if (recipe_lines.length === 1 && recipe_lines.stock_parent_code == null)\r\n      return <sup>No recipe.</sup>;  \r\n  \r\n    const total = this.getTotalExcl();\r\n  \r\n\t  if (this.props.OnPriceChanged) {\r\n      this.props.OnPriceChanged(this.props.lineindex, total);\r\n    } \r\n    \r\n    return (<span><b>Total: {total.toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2})}</b>&nbsp;{this.renderRecipeDetails(recipe_lines)}</span>);\r\n  }\r\n  \r\n  \r\n  render() {   \r\n    return (\r\n\t    <div>\r\n\t      <p id=\"status\"></p>      \r\n\t     {this.renderRecipe()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeDetail;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport QuoteBuilder from './QuoteBuilder.js';\nimport Login from './Login.js';\n\n\nfunction getDefaultVal(name, defaultval) {\n  let val = (new URLSearchParams(window.location.search)).get(name); //NB. is case sensitive!\n  if (!val || val === \"\") {\n      val = process.env.[\"REACT_APP_\"+name]; //NB. for react, env variables MUST be prefixed with REACT_APP_\n    }\n  if (!val || val === \"\")\n    val = defaultval;\n  return val;\n}\n\nfunction App() {\n    \n  const credentials = \"UserName=\"+getDefaultVal(\"UserName\", \"Guest\")+\"&Password=\"+getDefaultVal(\"Password\", \"Dev2021\")+\"&CompanyName=\"+getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\");\n  \n  let refno = getDefaultVal(\"RefNo\", \"Q00008\"); //NB. is case sensitive!\n  \n  /*if (!sessionStorage.UserName) {\n      return (\n      <Login />);\n    }*/\n  \n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"App-name\">\n        <h1>Configurator</h1>\n        <sup>Quote Builder</sup>\n        </div>\n      </header>\n\t  <QuoteBuilder reference={refno} credentials={credentials}/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import dotenv from 'dotenv';\r\n\r\nclass OmniReactComponent extends React.Component {\r\n   \r\n  constructor(props) {\r\n    super(props);\r\n    //dotenv.config();\r\n    const baseUrl = this.getDefaultVal(\"BaseUrl\", \"https://st.omniaccounts.co.za:55685\");\r\n    \r\n    //console.log(baseUrl);\r\n    const credentials = \"UserName=\"+this.getDefaultVal(\"UserName\", \"Guest\")+\"&Password=\"+this.getDefaultVal(\"Password\", \"Dev2021\")+\"&CompanyName=\"+this.getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\");\r\n    //console.log(credentials);\r\n    \r\n\tthis.state = {\r\n      //quote: null,\r\n      baseUrl,\r\n      credentials,\r\n      userName: this.getDefaultVal(\"UserName\", \"Guest\"),\r\n      password: this.getDefaultVal(\"Password\", \"Dev2021\"),\r\n      companyName: this.getDefaultVal(\"CompanyName\", \"SA Example Company [Demo]\"),\r\n      isLoaded: false\r\n    };\r\n\t\r\n  }\r\n  \r\n  getDefaultVal = (name, defaultval) => {\r\n    let val = (new URLSearchParams(window.location.search)).get(name); //NB. is case sensitive!\r\n    if (!val || val === \"\") {\r\n      val = process.env.[\"REACT_APP_\"+name]; //NB. for react, env variables MUST be prefixed with REACT_APP_\r\n    }\r\n    if (!val || val === \"\")\r\n      val = defaultval;\r\n    return val;\r\n  }\r\n  \r\n  getUserName = () => {\r\n    return sessionStorage.UserName;\r\n  }\r\n  \r\n   formatQty = (qty) => {\r\n     return qty.toLocaleString(undefined, {maximumFractionDigits:3});\r\n   }\r\n   \r\n   formatPrice = (price) => {\r\n     return price.toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2});\r\n   }\r\n  \r\n  setUserNameAndLogonToken = (userName, logonToken) => {\r\n    sessionStorage.UserName = userName;\r\n    sessionStorage.Token = logonToken;\r\n    \r\n    this.setState({\r\n            userName: userName,\r\n            password: logonToken\r\n          });\r\n  }\r\n  \r\n  DoLogonChanged = () => {\r\n    this.setState({\r\n            userName: sessionStorage.UserName,\r\n            password: sessionStorage.Token\r\n          });\r\n  }\r\n  \r\n  \r\n  restGet = (endpoint, id) => {\r\n    //##will need a callback for what do do with the success response\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default OmniReactComponent;"],"sourceRoot":""}